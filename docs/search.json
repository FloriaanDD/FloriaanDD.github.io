[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "OCS2024 - Exploring the genome - an overview of tools and applications for the modern Chondrichthyes ecologist",
    "section": "",
    "text": "Welcome!\nWelcome to the afternoon session of this 1-day workshop developed for the OCS2024 conference. In this session we will run through some population genetic analyses to understand our data from different perspectives, such as: population structure and connectivity, genetic diversity, signals of adaptation, relatedness and sex-linked markers.\nThe focus of this workshop is to improve our interpretation of the results, not to practice our R coding skill. Therefore, the basic code is available to you and can be improved for your purpose. If you would like some refreshing on R coding and the data formats, have a look at the Refreshers and tutorials tab.\nPlease ensure R and Rstudio, along with the required packages, are installed on your personal computer BEFORE the workshop. We will not have time to troubleshoot R install issues during the session. You have find a guide to install under the Install packages tab.\nSeveral example dataset have also been made available, but if you have your own data do not hesitate to use that."
  },
  {
    "objectID": "index.html#here-are-some-things-you-might-see-along-your-journey",
    "href": "index.html#here-are-some-things-you-might-see-along-your-journey",
    "title": "OCS2024 - Exploring the genome - an overview of tools and applications for the modern Chondrichthyes ecologist",
    "section": "Here are some things you might see along your journey:",
    "text": "Here are some things you might see along your journey:\nBelow is an exercise box, this is encouraging you to give it a go yourself!\n\n\n\n\n\n\nExercise\n\n\n\n Give the code a go!\n\n\nBelow is a tip box, with added insights for your journey.\n\n\n\n\n\n\nTip\n\n\n\ntake a look…\nA variety of things to learn!\n\n\nBelow is a caution box, take note, this will keep you on your path.\n\n\n\n\n\n\nCaution\n\n\n\nTake CARE! It is easy to go astray, I am here to help.\n\n\nBelow is a warning box! Be careful and take head of what it says.\n\n\n\n\n\n\nWarning\n\n\n\nNOTICE! Thank you for noticing this warning!"
  },
  {
    "objectID": "index.html#a-big-thank-you-to-the-developers-from-dartr-for-making-their-code-available",
    "href": "index.html#a-big-thank-you-to-the-developers-from-dartr-for-making-their-code-available",
    "title": "OCS2024 - Exploring the genome - an overview of tools and applications for the modern Chondrichthyes ecologist",
    "section": "A big thank you to the developers from dartR for making their code available!",
    "text": "A big thank you to the developers from dartR for making their code available!\nDartR published first by Gruber et al. (2018), and dartR V2 published by Mijangos et al. (2022)\nThe code presented here was developed by a group a people for the population genetic workshop in Kioloa. We express our sincere thanks to the following people for making this code available: Arthur Georges, Bernd Gruber, Luis Mijangos, Renee Catullo, Oliver Berry, Andrzej Killian, Jason Carling, Andrew Kowalczyk, Bill Sherwin, Carlo Pacioni, Robyn Shaw, Catherine Grueber, Kate Farquharson, Luciano Beheregaray, Chris Brauer, Jonathan Sandoval-Castillo, Sally Potter, Craig Moritz, Diana Robledo-Ruiz, Natasha Marosi, Jinliang Wang.\n\nMore scripts and explanations from this workshop can be found here\n\n\n\n\nGruber, B., P. J. Unmack, O. F. Berry, and A. Georges. 2018. “Dartr: An r Package to Facilitate Analysis of SNP Data Generated from Reduced Representation Genome Sequencing.” Journal Article. Molecular Ecology Resources 18 (3): 691–99. https://doi.org/10.1111/1755-0998.12745.\n\n\nMijangos, Jose Luis, Bernd Gruber, Oliver Berry, Carlo Pacioni, and Arthur Georges. 2022. “dartR V2: An Accessible Genetic Analysis Platform for Conservation, Ecology and Agriculture.” Journal Article. Methods in Ecology and Evolution 13 (10): 2150–58. https://doi.org/https://doi.org/10.1111/2041-210X.13918."
  },
  {
    "objectID": "install.html#setting-up-r-environments",
    "href": "install.html#setting-up-r-environments",
    "title": "Install packages",
    "section": "Setting up R environments",
    "text": "Setting up R environments\n\nGetting set up\nTo begin, you should download and install R from the CRAN. This is the online hub for the R language and it stands for Comprehensive R Archive Network. Be sure to download the correct R installation for your operating system.\nDowload R here\nWe also strongly recommend you install RStudio, a front-end for R. This utility makes working in the R environment a lot more straightforward, standardises things across operating systems and has many helpful features. For the purposes of these tutorials, we will assume you are using RStudio.\nDowload Rstudio here\nWith both R and RStudio installed, start Rstudio and we will begin!\nFor this tutorial I use R version 4.2 and Rstudio version 2023.09.1, but newer versions work as well.\n\n\nInstall packages\nIf you have trouble installing packages try to “restart R” under “Session”.\nRemember to read the error messages, sometimes you are missing a package not listed below.\nIf you have issues installing the related package (e.g. on Mac), you can find more instructions here.\n\ninstall.packages(\"dartRverse\")\ninstall.packages(\"adegenet\")\ninstall.packages(\"directlabel\") #needed for PCA\ninstall.packages(\"networkD3\") #needed for private allele analysis\ninstall.packages(\"related_1.0.tar.gz\", \n                 repos = NULL) # located in your working directory\ninstall.packages(\"devtools\")\ndevtools::install_github(\"kkeenan02/diveRsity\")\n\nif (!require(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\nBiocManager::install(\"snpStats\", force = TRUE, update = FALSE) #for LD\nBiocManager::install(\"qvalue\")\nBiocManager::install(\"SNPRelate\")\n\ndevtools::install_github('mijangos81/ggtern') # for HWE diagnostics\ndevtools::install_github('green-striped-gecko/dartR.base', ref = \"dev\")\ndevtools::install_github('green-striped-gecko/dartR.popgen', ref = \"dev\")\ndevtools::install_github('green-striped-gecko/dartR.sexlinked', ref = \"dev\")\n\n\n\nLoad packages\n\nlibrary(dartRverse)\nlibrary(adegenet)\nlibrary(diveRsity)\nlibrary(snpStats) #only for LD\nlibrary(ggtern) # for HWE diagnostics\nlibrary(related)\n\n\n\nTest several key functions\nYou can test if the packages were installed properly by running some functions on a test dataset from dartR.\n\nbandicoot.gl &lt;- dartR.data::bandicoot.gl\n\n\n\\(FST\\)Genetic diversityMigration rates\\(FST\\) OutliersRelatedness\n\n\n\nfst.res &lt;- dartR.base::gl.fst.pop(bandicoot.gl, nboots = 100, verbose = 0)\nfst.res$Fsts\n\n            WA          SA         QLD         NSW VIC\nWA          NA          NA          NA          NA  NA\nSA  0.01284780          NA          NA          NA  NA\nQLD 0.01914757 0.008299097          NA          NA  NA\nNSW 0.01976912 0.005642649 0.002860581          NA  NA\nVIC 0.01961053 0.011817948 0.007405903 0.006554746  NA\n\nfst.res$Pvalues\n\n    WA SA  QLD NSW VIC\nWA  NA NA   NA  NA  NA\nSA   0 NA   NA  NA  NA\nQLD  0  0   NA  NA  NA\nNSW  0  0 0.01  NA  NA\nVIC  0  0 0.00   0  NA\n\n\n\n\n\nbasic.stats &lt;- dartR.base::utils.basic.stats(bandicoot.gl)\nbasic.stats$overall\n\n     Ho      Hs      Ht     Dst     Htp    Dstp     Fst    Fstp     Fis    Dest \n 0.3232  0.3400  0.3431  0.0031  0.3439  0.0039  0.0091  0.0113  0.0493  0.0059 \nGst_max   Gst_H \n 0.6126  0.0185 \n\n\n\n\n\nsource(\"gl2gpop_FDD.R\")\ngl2gpop(bandicoot.gl, filename = \"data/genepop.gen\")\nmigration &lt;- diveRsity::divMigrate(infile = \"data/genepop.gen\", boots = 100, stat = \"Nm\", plot_network = TRUE, para = TRUE, filter_threshold = 0.2)\n\n\n\n\n\n\ncolnames(migration$nmRelMig) &lt;- adegenet::popNames(bandicoot.gl)\nrownames(migration$nmRelMig) &lt;- adegenet::popNames(bandicoot.gl)\nmigration$nmRelMig\n\n          NSW       QLD        SA       VIC        WA\nNSW        NA 0.8164793 0.9320130 0.6981982 0.7346275\nQLD 0.9358883        NA 0.7482388 0.6110798 0.6722854\nSA  1.0000000 0.7437246        NA 0.6444849 0.9344058\nVIC 0.7454293 0.5942128 0.6335472        NA 0.5895053\nWA  0.7316944 0.6278427 0.8720564 0.6045926        NA\n\n\n\n\n\noutliers &lt;- dartR.popgen::gl.outflank(bandicoot.gl,\n                        plot = TRUE,\n                        LeftTrimFraction = 0.05,\n                        RightTrimFraction = 0.05,\n                        Hmin = 0.1,\n                        qthreshold = 0.05,)\n\nStarting gl2gi \n  Processing genlight object with SNP data\nMatrix converted.. Prepare genind object...\nCompleted: gl2gi \nCalculating FSTs, may take a few minutes...\n\n\n\n\noutliers$outflank$numberLowFstOutliers\n\n[1] 0\n\noutliers$outflank$numberHighFstOutliers\n\n[1] 0\n\n\n\n\n\nrelate &lt;- dartR.base::gl2related(bandicoot.gl, verbose = 0)\npop.code &lt;- substr(bandicoot.gl$pop, start = 1, stop = 2) #Related only takes 2 letter code for population\nrelate$V1 &lt;- paste0(pop.code, \"_\", relate$V1)\n\npw.rel &lt;- related::coancestry(relate, lynchli = 1, lynchrd = 1,trioml = 0L, dyadml = 0L,\n                               quellergt = 1, wang = 1, ritland = 1)\nsave(pw.rel, file = \"data/bandicoot_relatedness.Rdata\")\n\n\nres &lt;- pw.rel$relatedness\n\nplot.data &lt;- tidyr::gather(res, condition, measurement, 5:11, factor_key = TRUE)\nplot &lt;- ggplot2::ggplot(plot.data[plot.data$condition == \"wang\",], \n                        ggplot2::aes(x = group, y = measurement, \n                                                fill = group)) + \n  ggplot2::geom_boxplot() +\n  ggplot2::facet_wrap(condition~.) +\n  ggplot2::labs(x = \"Site\", y = \"Relatedness\") +\n  ggplot2::theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))\nprint(plot)"
  },
  {
    "objectID": "refreshers.html#dartr-rstudio-refresher",
    "href": "refreshers.html#dartr-rstudio-refresher",
    "title": "Refreshers and dartR tutorials",
    "section": "dartR RStudio Refresher",
    "text": "dartR RStudio Refresher\nDownload PDF file."
  },
  {
    "objectID": "refreshers.html#dartr-installation",
    "href": "refreshers.html#dartr-installation",
    "title": "dartR Tutorials",
    "section": "dartR Installation",
    "text": "dartR Installation\nDownload PDF file."
  },
  {
    "objectID": "refreshers.html#data-structure-and-input",
    "href": "refreshers.html#data-structure-and-input",
    "title": "Refreshers and dartR tutorials",
    "section": "Data Structure and Input",
    "text": "Data Structure and Input\nDownload PDF file."
  },
  {
    "objectID": "refreshers.html#data-manipulation",
    "href": "refreshers.html#data-manipulation",
    "title": "Refreshers and dartR tutorials",
    "section": "Data Manipulation",
    "text": "Data Manipulation\nDownload PDF file."
  },
  {
    "objectID": "refreshers.html#dartr-basic-filtering",
    "href": "refreshers.html#dartr-basic-filtering",
    "title": "Refreshers and dartR tutorials",
    "section": "dartR Basic Filtering",
    "text": "dartR Basic Filtering\nDownload PDF file."
  },
  {
    "objectID": "refreshers.html#fixed-differences",
    "href": "refreshers.html#fixed-differences",
    "title": "Refreshers and dartR tutorials",
    "section": "Fixed Differences",
    "text": "Fixed Differences\nDownload PDF file."
  },
  {
    "objectID": "refreshers.html#extra-resources",
    "href": "refreshers.html#extra-resources",
    "title": "Refreshers and dartR tutorials",
    "section": "Extra resources",
    "text": "Extra resources\nThese tutorials provide great examples of additional analyses.\n“Population Genetics in R” by Kamvar et al. 2016\nAdegenet Tutorials by Thibaut Jombart\nevolutionary genetics tutorial\n“Computational Genomics with R” by Altuna Akalin"
  },
  {
    "objectID": "DArT_dartR.html#dartr",
    "href": "DArT_dartR.html#dartr",
    "title": "DArT and dartR background",
    "section": "dartR",
    "text": "dartR\nThe packages from dartRverse pick up the analysis at this point. The additional filtering that you may choose to undertake using dartRverse depends upon the research questions and other considerations as outlined below.\n\n\nData format\ndartR used the genlight (and genind) formats from the adegenet package (Jombart and Ahmed 2011).\n\nbandicoot.gl &lt;- dartR.data::bandicoot.gl\n\n\nBasically, this object is a dataframe which has the individuals in columns and the SNPs in rows\nIn the image below the SNPs are coded according that nucleotide mutations (e.g. A/A for homozygous, or C/G for heterozygous)\n\n\n\nBut to make all genetic markers comparable, they will be code:\n\n0 = homozygous for the reference allele\n\n1 = heterozygous\n\n2 = homozygous for the alternate allele\n\nNA = missing data\n\n\nThe genlight object also stored the metadata of your individuals and SNPs\n\n\nIndividual metadataSNP metadata\n\n\n\nbandicoot.gl@pop\n\n [1] WA  WA  SA  QLD WA  WA  NSW VIC WA  SA  SA  VIC WA  NSW NSW WA  VIC SA  VIC\n[20] NSW WA  WA  NSW WA  NSW SA  WA  QLD QLD QLD QLD VIC WA  SA  WA  SA  SA  NSW\n[39] WA  WA  NSW QLD NSW QLD WA  NSW SA  VIC WA  WA  SA  SA  WA  QLD WA  QLD WA \n[58] WA  QLD QLD VIC SA  SA  NSW NSW WA  QLD SA  WA  VIC SA  SA  SA  NSW WA  NSW\n[77] WA  SA  SA  SA  QLD QLD VIC NSW VIC NSW WA  NSW NSW VIC WA  WA  QLD VIC SA \n[96] NSW\nLevels: NSW QLD SA VIC WA\n\nbandicoot.gl@ind.names\n\n [1] \"bc1\"  \"bc2\"  \"bc3\"  \"bc4\"  \"bc5\"  \"bc6\"  \"bc7\"  \"bc8\"  \"bc9\"  \"bc10\"\n[11] \"bc11\" \"bc12\" \"bc13\" \"bc14\" \"bc15\" \"bc16\" \"bc17\" \"bc18\" \"bc19\" \"bc20\"\n[21] \"bc21\" \"bc22\" \"bc23\" \"bc24\" \"bc25\" \"bc26\" \"bc27\" \"bc28\" \"bc29\" \"bc30\"\n[31] \"bc31\" \"bc32\" \"bc33\" \"bc34\" \"bc35\" \"bc36\" \"bc37\" \"bc38\" \"bc39\" \"bc40\"\n[41] \"bc41\" \"bc42\" \"bc43\" \"bc44\" \"bc45\" \"bc46\" \"bc47\" \"bc48\" \"bc49\" \"bc50\"\n[51] \"bc51\" \"bc52\" \"bc53\" \"bc54\" \"bc55\" \"bc56\" \"bc57\" \"bc58\" \"bc59\" \"bc60\"\n[61] \"bc61\" \"bc62\" \"bc63\" \"bc64\" \"bc65\" \"bc66\" \"bc67\" \"bc68\" \"bc69\" \"bc70\"\n[71] \"bc71\" \"bc72\" \"bc73\" \"bc74\" \"bc75\" \"bc76\" \"bc77\" \"bc78\" \"bc79\" \"bc80\"\n[81] \"bc81\" \"bc82\" \"bc83\" \"bc84\" \"bc85\" \"bc86\" \"bc87\" \"bc88\" \"bc89\" \"bc90\"\n[91] \"bc91\" \"bc92\" \"bc93\" \"bc94\" \"bc95\" \"bc96\"\n\nknitr::kable(head(bandicoot.gl@other$ind.metrics))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\npop\ndartseq.run\nlat\nlon\nstate\nassigned.sex\n\n\n\n\ns01-19\ns01-19\nWA\n2\n-33.25139\n121.7433\nWA\nFemale\n\n\ns34-74\ns34-74\nWA\n2\n-30.90580\n128.1267\nWA\nMale\n\n\ns35-8\ns35-8\nSA\n2\n-37.53083\n140.2131\nSA\nFemale\n\n\ns40-15\ns40-15\nQLD\n2\n-20.01550\n148.1810\nQLD\nMale\n\n\ns07-54\ns07-54\nWA\n2\n-30.23920\n115.0485\nWA\nMale\n\n\ns10-33\ns10-33\nWA\n2\n-27.37594\n118.7795\nWA\nFemale\n\n\n\n\n\n\n\n\nbandicoot.gl@n.loc\n\n[1] 1000\n\nknitr::kable(head(bandicoot.gl@other$loc.metrics))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlleleID\nAlleleSequence\nSNP\nSnpPosition\nCallRate\nOneRatioRef\nOneRatioSnp\nFreqHomRef\nFreqHomSnp\nFreqHets\nPICRef\nPICSnp\nAvgPIC\nAvgCountRef\nAvgCountSnp\nRatioAvgCountRefAvgCountSnp\nRepAvg\nclone\nuid\navgPIC\nmonomorphs\nmaf\nOneRatio\nPIC\nverbose\n\n\n\n\n17678493|F|0-6:C&gt;T-6:C&gt;T\nTGCAGGTGGCGCCAAACCGCTGCGCCACCGGGGCTGCCCTATCAGCACAATTTTAGAACATGAGATCGG\n6:C&gt;T\n6\n1\n0.98\n0.23\n0.77\n0.02\n0.21\n0.0392\n0.3542\n0.190781\n26.82243\n11.79070\n2.27488\n1.000000\n17678493\n17678493-6\n0.1967\nNA\nNA\nNA\nNA\nNA\n\n\n10722863|F|0-8:G&gt;A-8:G&gt;A\nTGCAGGTCATCTTGAAGACCAGGAGAGCTGGACGTGTGTGTGACCAGGATCACATGAGATCGGAAGAGC\n8:G&gt;A\n8\n1\n0.84\n0.59\n0.41\n0.16\n0.43\n0.2688\n0.4838\n0.382139\n34.87222\n28.58915\n1.21977\n0.997159\n10722863\n10722863-8\n0.3763\nNA\nNA\nNA\nNA\nNA\n\n\n10723768|F|0-35:C&gt;T-35:C&gt;T\nTGCAGTGATAGCTAACTGATACACACCACTATGCCTCAAGGCAAGCATGAGATCGGAAGAGCGGTTCAG\n35:C&gt;T\n35\n1\n0.93\n0.53\n0.47\n0.07\n0.46\n0.1302\n0.4982\n0.322650\n51.34536\n32.91228\n1.56007\n0.985795\n10723768\n10723768-35\n0.3142\nNA\nNA\nNA\nNA\nNA\n\n\n10729717|F|0-18:G&gt;A-18:G&gt;A\nTGCAGGTGGCACTAAACCACTGCGCCACTGGGGCTGCCCAAATTACATGAGATCGGAAGAGCGGTTCAG\n18:G&gt;A\n18\n1\n0.94\n0.47\n0.53\n0.06\n0.41\n0.1128\n0.4982\n0.314805\n30.21939\n25.14019\n1.20204\n0.988636\n10729717\n10729717-18\n0.3055\nNA\nNA\nNA\nNA\nNA\n\n\n10724389|F|0-18:T&gt;C-18:T&gt;C\nTGCAGTTTGACTTGACCTCAGGCTGTTCCGATACACATGAGATCGGAAGAGCGGTTCAGCAGGAATGCC\n18:T&gt;C\n18\n1\n0.95\n0.37\n0.63\n0.05\n0.32\n0.0950\n0.4662\n0.263757\n52.99038\n34.82895\n1.52145\n1.000000\n10724389\n10724389-18\n0.2806\nNA\nNA\nNA\nNA\nNA\n\n\n10730073|F|0-8:T&gt;C-8:T&gt;C\nTGCAGTTACGCAGGATAAAGGGAAAAACAAGACAGCTCCAGAAATGTAACATGAGATCGGAAGAGCGGT\n8:T&gt;C\n8\n1\n0.98\n0.30\n0.70\n0.02\n0.28\n0.0392\n0.4200\n0.217058\n44.84834\n31.42593\n1.42711\n1.000000\n10730073\n10730073-8\n0.2296\nNA\nNA\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n\nJombart, Thibaut, and Ismaïl Ahmed. 2011. “Adegenet 1.3-1: New Tools for the Analysis of Genome-Wide SNP Data.” Journal Article. Bioinformatics 27 (21): 3070–71. https://doi.org/10.1093/bioinformatics/btr521."
  },
  {
    "objectID": "DArT_dartR.html#dart",
    "href": "DArT_dartR.html#dart",
    "title": "DArT and dartR background",
    "section": "DArT",
    "text": "DArT\n\nDiversity Arrays Technology (DArT) is a private company that specializes in genotyping-by-sequencing. Their approach is one of genome complexity reduction.\n\nSequencing\nDArTSeq is a method that extracts reproducible genomic variation across the genomes of many individuals at an affordable cost. The technique digests genomic DNA using pairs of restriction enzymes (cutters) (Figure 1). When the DNA is cut at two locations within a reasonable distance of each other, the fragment is available for sequencing using the Illumina short-read platforms. Hence, the data are representational in the sense that they are generated for a random but reproducible selection of small fragments of sequence only, fragments that exhibit variation at the level of single base pairs (SNPs).\n\n\nGenotyping\nSequences generated by Diversity Arrays Technology (DArT) are processed using proprietary analytical pipelines before the report (containing the SNP and SilicoDArT markers) is provided to the client and the data are passed to dartR.\n\n\nPoor quality sequences are first filtered (minimum barcode Phred score 30, pass percentage 75; minimum whole-read Phred score 10, pass percentage 50). In that way, assignment of the sequences to specific samples in the sample disaggregation step is very reliable.\n\nThese sequences are truncated to 69 bp and aggregated into clusters by the DArT fast clustering algorithm.\n\nThe sequences are then error-corrected. Identical sequences are then collapsed. These error-corrected sequences are analysed using DART software (DArT GS14 pipeline) to output candidate SNP markers.\n\nAs an additional quality control, a selection of samples (30 to 100% of samples) is processed twice. These are technical replicates. Scoring consistency (reproducibility or more strictly, repeatability) is used as the main selection criterion for high quality/low error rate markers.\n\nWhere a mutation in present at a site in your genome (across your samples), this is called a Single Nucleotide Polymorphism (SNP)."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Devloo-Delva, Floriaan, Christopher P. Burridge, Peter M. Kyne, Juerg M.\nBrunnschweiler, Demian D. Chapman, Patricia Charvet, Xiao Chen, et al.\n2023. “From Rivers to Ocean Basins: The Role of Ocean Barriers and\nPhilopatry in the Genetic Structuring of a Cosmopolitan Coastal\nPredator.” Journal Article. Ecology and Evolution 13\n(2): e9837.\n\n\nDevloo-Delva, Floriaan, Thierry Gosselin, Paul A Butcher, Peter M Grewe,\nCharlie Huveneers, Robin B Thomson, Jonathan M Werry, and Pierre Feutry.\n2023. “An r-Based Tool for Identifying Sex-Linked Markers from\nRestriction Site-Associated DNA Sequencing with Applications to\nElasmobranch Conservation.” Journal Article. Conservation\nGenetics Resources 16: 11–16. https://doi.org/10.1007/s12686-023-01331-5.\n\n\nFeutry, Pierre, Floriaan Devloo-Delva, Adrien Tran Lu Y, Stefano Mona,\nRasanthi M. Gunasekera, Grant Johnson, Richard D. Pillans, et al. 2020.\n“One Panel to Rule Them All: DArTcap Genotyping for Population\nStructure, Historical Demography, and Kinship Analyses, and Its\nApplication to a Threatened Shark.” Journal Article.\nMolecular Ecology Resources 20 (6): 1470–85. https://doi.org/10.1111/1755-0998.13204.\n\n\nGeorges, Arthur, Luis Mijangos, Andrzej Kilian, Hardip Patel, Mark\nAitkens, and Bernd Gruber. 2023. “Distances and Their\nVisualization in Studies of Spatial-Temporal Genetic Variation Using\nSingle Nucleotide Polymorphisms (SNPs).” bioRxiv. https://doi.org/10.1101/2023.03.22.533737.\n\n\nGoudet, Jérôme, Tomas Kay, and Bruce S. Weir. 2018. “How to\nEstimate Kinship.” Molecular Ecology 27 (20): 4121–35.\nhttps://doi.org/https://doi.org/10.1111/mec.14833.\n\n\nGruber, B., P. J. Unmack, O. F. Berry, and A. Georges. 2018.\n“Dartr: An r Package to Facilitate Analysis of SNP Data Generated\nfrom Reduced Representation Genome Sequencing.” Journal Article.\nMolecular Ecology Resources 18 (3): 691–99. https://doi.org/10.1111/1755-0998.12745.\n\n\nJombart, Thibaut, and Ismaïl Ahmed. 2011. “Adegenet 1.3-1: New\nTools for the Analysis of Genome-Wide SNP Data.” Journal Article.\nBioinformatics 27 (21): 3070–71. https://doi.org/10.1093/bioinformatics/btr521.\n\n\nJost, Lou. 2008. “GST and Its Relatives Do Not Measure\nDifferentiation.” Molecular Ecology 17 (18): 4015–26.\n\n\nMijangos, Jose Luis, Bernd Gruber, Oliver Berry, Carlo Pacioni, and\nArthur Georges. 2022. “dartR V2: An Accessible Genetic Analysis\nPlatform for Conservation, Ecology and Agriculture.” Journal\nArticle. Methods in Ecology and Evolution 13 (10): 2150–58.\nhttps://doi.org/https://doi.org/10.1111/2041-210X.13918.\n\n\nNikolic, Natacha, Floriaan Devloo-Delva, Diane Bailleul, Ekaterina\nNoskova, Clément Rougeux, Chrystelle Delord, Philippe Borsa, et al.\n2023. “Stepping up to Genome Scan Allows Stock Differentiation in\nthe Worldwide Distributed Blue Shark Prionace Glauca.” Journal\nArticle. Molecular Ecology 32 (5): 1000–1019.\nhttps://doi.org/https://doi.org/10.1111/mec.16822.\n\n\nPew, Jack, Paul H Muir, Jinliang Wang, and Timothy R Frasier. 2015.\n“Related: An r Package for Analysing Pairwise Relatedness from\nCodominant Molecular Markers.” Journal Article. Molecular\nEcology Resources 15 (3): 557–61.\n\n\nRobledo-Ruiz, Diana A., Lana Austin, J. Nevil Amos, Jesús\nCastrejón-Figueroa, Daniel K. P. Harley, Michael J. L. Magrath, Paul\nSunnucks, and Alexandra Pavlova. 2023. “Easy-to-Use r Functions to\nSeparate Reduced-Representation Genomic Datasets into Sex-Linked and\nAutosomal Loci, and Conduct Sex Assignment.” Journal Article.\nMolecular Ecology Resources 00: 1–21. https://doi.org/https://doi.org/10.1111/1755-0998.13844.\n\n\nSherwin, William B, Anne Chao, Lou Jost, and Peter E Smouse. 2017.\n“Information Theory Broadens the Spectrum of Molecular Ecology and\nEvolution.” Journal Article. Trends in Ecology &\nEvolution 32 (12): 948–63.\n\n\nSpeed, Doug, and David J Balding. 2015. “Relatedness in the\nPost-Genomic Era: Is It Still Useful?” Nature Reviews\nGenetics 16 (1): 33–44.\n\n\nSundqvist, Lisa, Kevin Keenan, Martin Zackrisson, Paulo Prodöhl, and\nDavid Kleinhans. 2016. “Directional Genetic Differentiation and\nRelative Migration.” Ecology and Evolution 6 (11):\n3461–75.\n\n\nWang, Yuhua. 2022. “Blood Is Thicker Than Water: Elite Kinship\nNetworks and State Building in Imperial China.” American\nPolitical Science Review 116 (3): 896–910.\n\n\nWhitlock, M. C., and K. E. Lotterhos. 2015. “Reliable Detection of\nLoci Responsible for Local Adaptation: Inference of a Null Model Through\nTrimming the Distribution of Fst.” Journal Article. The\nAmerican Naturalist 186 (S1): S24–36. https://doi.org/10.1086/682949."
  },
  {
    "objectID": "main_code.html",
    "href": "main_code.html",
    "title": "Let’s get started",
    "section": "",
    "text": "Load packages\nlibrary(dartRverse)\nlibrary(adegenet)\nlibrary(diveRsity)\nlibrary(snpStats) #only for LD\nlibrary(ggtern) # for HWE diagnostics\nlibrary(related)\nWe have made three dataset available for this tutorial. Pick one:\nFor the purpose of this workshop we will use the dartRverse packages to read and filter the data (Gruber et al. 2018; Mijangos et al. 2022).\nInferring ancestry differences among individuals from different populations, or identifying population structure has been motivated by many applications:\nUntil recently we were only able to group individuals into populations using a few genetic markers. However, the decrease in cost and improvements in technology mean that is now feasible to use whole genomes to perform these kinds of analyses. This means that we can now have very fine scaled analyses of populations based on many thousands of markers.\nExamining population structure can give us a great deal of insight into the history and origin of populations. Model-free methods for examining population structure and ancestry, such as principal components analysis are extremely popular in population genomic research. This is because it is typically simple to apply and relatively easy to interpret.\nGenetic variability of populations of a species is important because it can be thought of an indirect measure of the evolvability of those populations. The greater the genetic diversity of a population the bigger the amount of genetic raw material upon which selection can act. A population deprived of its genetic variability is less likely to respond to environmental changes and more vulnerable to the negative effects of inbreeding. From a theoretical point of you measuring (correctly) genetic diversity of a population and comparing it among different naturally occurring or human driven treatments might be important to test the theoretical predictions on impact of drift on effect of population size of relatively isolated (small) populations and on mechanisms of genetic variance (diversity) maintenance. From the conservation point of view the relative genetic diversity of population differentially affected by human intervention might give insight into how resilient populations of a species are to rapid changes of the habitat in which they live.\nbasic.stats &lt;- dartR.base::utils.basic.stats(data.gl)\nbasic.stats$overall\n\n     Ho      Hs      Ht     Dst     Htp    Dstp     Fst    Fstp     Fis    Dest \n 0.2176  0.2155  0.2610  0.0455  0.2724  0.0569  0.1743  0.2088 -0.0098  0.0725 \nGst_max   Gst_H \n 0.7506  0.2782 \n\ncolMeans(basic.stats$Ho, na.rm = TRUE) #observed heterozygosity\n\n  Cambridge Gulf       Daly River       King Sound Papua New Guinea \n       0.2333104        0.2293272        0.1446049        0.2412934 \n Van Diemen Gulf \n       0.2391721 \n\nhets &lt;- gl.report.heterozygosity(data.gl, method = \"pop\")\n\nStarting gl.report.heterozygosity \n  Processing genlight object with SNP data\n  Calculating Observed Heterozygosities, averaged across\n                    loci, for each population\n  Calculating Expected Heterozygosities\n\nStarting gl.colors \nSelected color type dis \nCompleted: gl.colors \n\n\n\n\n\n                              pop      n.Ind n.Loc n.Loc.adj polyLoc monoLoc\nCambridge Gulf     Cambridge Gulf  29.785262  2212         1    1752     460\nDaly River             Daly River  27.773056  2212         1    1757     455\nKing Sound             King Sound  18.815956  2206         1    1048    1158\nPapua New Guinea Papua New Guinea   3.956581  2211         1    1205    1006\nVan Diemen Gulf   Van Diemen Gulf 376.841772  2212         1    2193      19\n                 all_NALoc       Ho     HoSD     HoSE       He     HeSD\nCambridge Gulf           0 0.233314 0.202012 0.004295 0.231541 0.190550\nDaly River               0 0.229330 0.202057 0.004296 0.227633 0.189611\nKing Sound               6 0.144606 0.212348       NA 0.134674 0.185966\nPapua New Guinea         1 0.241294 0.281102       NA 0.204037 0.203145\nVan Diemen Gulf          0 0.239172 0.188658 0.004011 0.240018 0.186304\n                     HeSE      uHe    uHeSD    uHeSE       FIS    FISSD FISSE\nCambridge Gulf   0.004052 0.235494 0.193803 0.004121  0.010577 0.185612    NA\nDaly River       0.004032 0.231807 0.193087 0.004105  0.009830 0.194138    NA\nKing Sound             NA 0.138351 0.191042       NA -0.029191 0.220399    NA\nPapua New Guinea       NA 0.233551 0.232530       NA -0.026071 0.373230    NA\nVan Diemen Gulf  0.003961 0.240337 0.186551 0.003966  0.010817 0.106491    NA\nCompleted: gl.report.heterozygosity\nSome alternate measures for genetic diversity are more comparable between datasets.This is provided by the gl.report.diversity function.\nThe output of this function: provide information for different indices: allelic richness (q = 0), Shannon information (q = 1), and heterozygosity (q = 2); within (alpha) or between (beta) populations. For all indexes, the entropies (H) and Hill numbers (D) are calculated.\nIn a nutshell, the alpha indexes between the different q-values should be similar if there is no deviation from expected allele frequencies and occurrences (e.g. all loci in HWE & equilibrium). If there is a deviation of an index, this links to a process causing it, such as dispersal, selection or strong drift. For a detailed explanation of all the indexes see Sherwin et al. (2017).\ndivers &lt;- dartR.base::gl.report.diversity(data.gl, table = FALSE, pbar = FALSE, verbose = 0)\n\nWarning in one_H_alpha_es[[x[1]]]$dummys[i1 %in% index] +\none_H_alpha_es[[x[2]]]$dummys[i2 %in% : longer object length is not a multiple\nof shorter object length\n\n\nWarning in one_H_alpha_all[i0 %in% index] - (one_H_alpha_es[[x[1]]]$dummys[i1\n%in% : longer object length is not a multiple of shorter object length\n\n\nWarning in one_H_alpha_es[[x[1]]]$dummys[i1 %in% index] +\none_H_alpha_es[[x[2]]]$dummys[i2 %in% : longer object length is not a multiple\nof shorter object length\n\n\nWarning in one_H_alpha_all[i0 %in% index] - (one_H_alpha_es[[x[1]]]$dummys[i1\n%in% : longer object length is not a multiple of shorter object length\n\n\nWarning in one_H_alpha_es[[x[1]]]$dummys[i1 %in% index] +\none_H_alpha_es[[x[2]]]$dummys[i2 %in% : longer object length is not a multiple\nof shorter object length\n\n\nWarning in one_H_alpha_all[i0 %in% index] - (one_H_alpha_es[[x[1]]]$dummys[i1\n%in% : longer object length is not a multiple of shorter object length\n\n\nWarning in one_H_alpha_es[[x[1]]]$dummys[i1 %in% index] +\none_H_alpha_es[[x[2]]]$dummys[i2 %in% : longer object length is not a multiple\nof shorter object length\n\n\nWarning in one_H_alpha_all[i0 %in% index] - (one_H_alpha_es[[x[1]]]$dummys[i1\n%in% : longer object length is not a multiple of shorter object length\n\n\nWarning in one_H_alpha_es[[x[1]]]$dummys[i1 %in% index] +\none_H_alpha_es[[x[2]]]$dummys[i2 %in% : longer object length is not a multiple\nof shorter object length\n\n\nWarning in one_H_alpha_all[i0 %in% index] - (one_H_alpha_es[[x[1]]]$dummys[i1\n%in% : longer object length is not a multiple of shorter object length\n\n\nWarning in one_H_alpha_es[[x[1]]]$dummys[i1 %in% index] +\none_H_alpha_es[[x[2]]]$dummys[i2 %in% : longer object length is not a multiple\nof shorter object length\n\n\nWarning in one_H_alpha_all[i0 %in% index] - (one_H_alpha_es[[x[1]]]$dummys[i1\n%in% : longer object length is not a multiple of shorter object length\n\n\nWarning in one_H_alpha_es[[x[1]]]$dummys[i1 %in% index] +\none_H_alpha_es[[x[2]]]$dummys[i2 %in% : longer object length is not a multiple\nof shorter object length\n\n\nWarning in one_H_alpha_all[i0 %in% index] - (one_H_alpha_es[[x[1]]]$dummys[i1\n%in% : longer object length is not a multiple of shorter object length\n\n\n  Processing genlight object with SNP data\n\n\n\n\ndivers$one_H_alpha\n\n  Cambridge Gulf       Daly River       King Sound Papua New Guinea \n       0.3529367        0.3482662        0.2051896        0.3026173 \n Van Diemen Gulf \n       0.3687394 \n\ndivers$one_H_beta\n\n                 Cambridge Gulf Daly River King Sound Papua New Guinea\nCambridge Gulf               NA 0.14604195 0.20724507       0.20825765\nDaly River           0.03065942         NA 0.19289681       0.19368266\nKing Sound           0.10234696 0.10471342         NA       0.27058669\nPapua New Guinea     0.05352050 0.05579714 0.12753651               NA\nVan Diemen Gulf      0.02042284 0.02275808 0.09423184       0.04555016\n                 Van Diemen Gulf\nCambridge Gulf        0.08479532\nDaly River            0.07111530\nKing Sound            0.16381330\nPapua New Guinea      0.16576583\nVan Diemen Gulf               NA\ndivMigrate uses the method described in Sundqvist et al. (2016) to plot the relative migration levels between population samples.\nNm (i.e., the effective number of migrants). This statistic incorporates complementary information from both Gst and D, suggesting it may be a more generally suitable measure of migration. When using Nm for calculating the percent of correct directions in the different simulation scenarios.\nAlternatively, the number of private alleles provides an indication of genetic isolation. We use private alleles (i.e. alleles only present in one population) as a sign of no migration.\nsource(\"gl2gpop_FDD.R\")\ngl2gpop(data.gl, filename = \"data/genepop.gen\")\n# dartR.base::gl2genepop(data.gl, outfile = \"genepop.gen\", outpath = getwd(), verbose = 5) # Not recognised by diveRsity\nmigration &lt;- diveRsity::divMigrate(infile = \"data/genepop.gen\", boots = 100, stat = \"Nm\", plot_network = TRUE, para = TRUE, filter_threshold = 0.2)\n\n\n\n\n\n\ncolnames(migration$nmRelMig) &lt;- adegenet::popNames(data.gl)\nrownames(migration$nmRelMig) &lt;- adegenet::popNames(data.gl)\nmigration$nmRelMig\n\n                 Cambridge Gulf Daly River King Sound Papua New Guinea\nCambridge Gulf               NA  0.7857795 0.10183280        0.2322329\nDaly River            0.8169289         NA 0.09510506        0.1900063\nKing Sound            0.2703799  0.2472216         NA        0.1117764\nPapua New Guinea      0.3508070  0.3018515 0.07791770               NA\nVan Diemen Gulf       0.5989464  0.9129015 0.10757361        0.2043979\n                 Van Diemen Gulf\nCambridge Gulf         0.6963752\nDaly River             1.0000000\nKing Sound             0.3130946\nPapua New Guinea       0.3640824\nVan Diemen Gulf               NA\n\n# Private alleles\ndartR.base::gl.report.pa(data.gl, plot.display = TRUE, verbose = 0)\n\n  Processing genlight object with SNP data\n\n\n   p1 p2             pop1             pop2 N1  N2 fixed priv1 priv2 Chao1 Chao2\n1   1  2   Cambridge Gulf       Daly River 30  28     0   211   216     0     0\n2   1  3   Cambridge Gulf       King Sound 30  19     0   833   129     0     0\n3   1  4   Cambridge Gulf Papua New Guinea 30   4     1   627    80     0    12\n4   1  5   Cambridge Gulf  Van Diemen Gulf 30 379     0    17   458     0     0\n5   2  3       Daly River       King Sound 28  19     0   843   134     0     0\n6   2  4       Daly River Papua New Guinea 28   4     1   634    82     0     8\n7   2  5       Daly River  Van Diemen Gulf 28 379     0    10   446     0     0\n8   3  4       King Sound Papua New Guinea 19   4    15   377   535     1     8\n9   3  5       King Sound  Van Diemen Gulf 19 379     1     5  1151     0     0\n10  4  5 Papua New Guinea  Van Diemen Gulf  4 379     0     7   995     0     0\n   totalpriv   AFD asym asym.sig\n1        427 0.115   NA       NA\n2        962 0.197   NA       NA\n3        707 0.166   NA       NA\n4        475 0.130   NA       NA\n5        977 0.200   NA       NA\n6        716 0.179   NA       NA\n7        456 0.109   NA       NA\n8        912 0.225   NA       NA\n9       1156 0.198   NA       NA\n10      1002 0.175   NA       NA\nUnderstanding natural selection is fundamental to properly understanding evolution. The basics of natural selection are relatively straightforward but surprisingly easily misunderstood. Our aim with this practical session is to use the R environment to actually demonstrate different methods to detect signals of selection.\nTwo alleles are identical by descent (IBD) if they are identical copies of the same ancestral allele in a base population. Relatedness is the proportion of alleles shared between individuals that are IBD. Kinship is the probability that two alleles, one taken at random from each individual, are IBD (Wang 2022). Kinship considers half the genetic information because it looks at the probability that one individual inherits a particular allele from a common ancestor shared with another individual. Therefore, kinship is equal to half of relatedness.\nNote that the variance of relatedness depends on the number of SNPs and genome size, therefore even with perfect data your relatedness will not follow these expected values exactly.\nFurther, in species with small population sizes (not uncommon in Chondrichthyes), inbreeding may skew the expected values even more.\nSee Robledo-Ruiz et al. (2023) and Devloo-Delva, Gosselin, et al. (2023).\noptions(width = 100)\ndevtools::session_info()\n\n─ Session info ───────────────────────────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.2.1 (2022-06-23 ucrt)\n os       Windows 10 x64 (build 22000)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  English_Australia.utf8\n ctype    English_Australia.utf8\n tz       Australia/Hobart\n date     2024-03-24\n pandoc   3.1.1 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────────────────────────\n package         * version    date (UTC) lib source\n abind             1.4-5      2016-07-21 [1] CRAN (R 4.2.0)\n ade4            * 1.7-22     2023-02-06 [1] CRAN (R 4.2.3)\n adegenet        * 2.1.10     2023-01-26 [1] CRAN (R 4.2.3)\n ape               5.7-1      2023-03-13 [1] CRAN (R 4.2.3)\n backports         1.4.1      2021-12-13 [1] CRAN (R 4.2.0)\n base64enc         0.1-3      2015-07-28 [1] CRAN (R 4.2.0)\n bayesm            3.1-6      2023-09-23 [1] CRAN (R 4.2.3)\n BiocGenerics      0.44.0     2022-11-01 [1] Bioconductor\n cachem            1.0.8      2023-05-01 [1] CRAN (R 4.2.3)\n checkmate         2.3.1      2023-12-04 [1] CRAN (R 4.2.3)\n cli               3.6.2      2023-12-11 [1] CRAN (R 4.2.3)\n cluster           2.1.6      2023-12-01 [1] CRAN (R 4.2.3)\n codetools         0.2-19     2023-02-01 [1] CRAN (R 4.2.2)\n colorspace        2.1-0      2023-01-23 [1] CRAN (R 4.2.3)\n compositions      2.0-7      2024-01-09 [1] CRAN (R 4.2.3)\n corpcor           1.6.10     2021-09-16 [1] CRAN (R 4.2.0)\n crayon            1.5.2      2022-09-29 [1] CRAN (R 4.2.3)\n dartR.base      * 0.88       2024-03-22 [1] Github (green-striped-gecko/dartR.base@cfc4d92)\n dartR.data      * 1.0.2      2022-11-16 [1] CRAN (R 4.2.3)\n dartR.popgen    * 0.88       2024-03-22 [1] Github (green-striped-gecko/dartR.popgen@d21d9f3)\n dartR.sexlinked * 0.88       2024-03-22 [1] Github (green-striped-gecko/dartR.sexlinked@af6e6a2)\n dartRverse      * 0.51       2023-12-01 [1] CRAN (R 4.2.3)\n data.table        1.14.10    2023-12-08 [1] CRAN (R 4.2.3)\n DEoptimR          1.1-3      2023-10-07 [1] CRAN (R 4.2.3)\n devtools          2.4.5      2022-10-11 [1] CRAN (R 4.2.3)\n digest            0.6.34     2024-01-11 [1] CRAN (R 4.2.3)\n diveRsity       * 1.9.90     2024-01-19 [1] Github (kkeenan02/diveRsity@17d00ad)\n doParallel        1.0.17     2022-02-07 [1] CRAN (R 4.2.1)\n dplyr           * 1.1.4      2023-11-17 [1] CRAN (R 4.2.3)\n ellipsis          0.3.2      2021-04-29 [1] CRAN (R 4.2.1)\n evaluate          0.23       2023-11-01 [1] CRAN (R 4.2.3)\n fansi             1.0.6      2023-12-08 [1] CRAN (R 4.2.3)\n farver            2.1.1      2022-07-06 [1] CRAN (R 4.2.1)\n fastmap           1.1.1      2023-02-24 [1] CRAN (R 4.2.3)\n fdrtool           1.2.17     2021-11-13 [1] CRAN (R 4.2.0)\n forcats         * 1.0.0      2023-01-29 [1] CRAN (R 4.2.3)\n foreach           1.5.2      2022-02-02 [1] CRAN (R 4.2.1)\n foreign           0.8-86     2023-11-28 [1] CRAN (R 4.2.3)\n formatR         * 1.14       2023-01-17 [1] CRAN (R 4.2.3)\n Formula           1.2-5      2023-02-24 [1] CRAN (R 4.2.2)\n fs                1.6.3      2023-07-20 [1] CRAN (R 4.2.3)\n gdsfmt            1.38.1     2024-01-25 [1] Github (zhengxwen/gdsfmt@89f2673)\n generics          0.1.3      2022-07-05 [1] CRAN (R 4.2.1)\n ggdendro          0.2.0      2024-02-23 [1] CRAN (R 4.2.3)\n ggplot2         * 3.4.4      2023-10-12 [1] CRAN (R 4.2.3)\n ggtern          * 3.3.5      2021-07-23 [1] Github (mijangos81/ggtern@23fa82a)\n glasso            1.11       2019-10-01 [1] CRAN (R 4.2.0)\n glue              1.7.0      2024-01-09 [1] CRAN (R 4.2.3)\n gridExtra         2.3        2017-09-09 [1] CRAN (R 4.2.1)\n gtable            0.3.4      2023-08-21 [1] CRAN (R 4.2.3)\n gtools            3.9.5      2023-11-20 [1] CRAN (R 4.2.3)\n highr             0.10       2022-12-22 [1] CRAN (R 4.2.3)\n Hmisc             5.1-1      2023-09-12 [1] CRAN (R 4.2.3)\n hms               1.1.3      2023-03-21 [1] CRAN (R 4.2.3)\n htmlTable         2.4.2      2023-10-29 [1] CRAN (R 4.2.3)\n htmltools         0.5.7      2023-11-03 [1] CRAN (R 4.2.3)\n htmlwidgets       1.6.4      2023-12-06 [1] CRAN (R 4.2.3)\n httpuv            1.6.13     2023-12-06 [1] CRAN (R 4.2.3)\n igraph            1.6.0      2023-12-11 [1] CRAN (R 4.2.3)\n iterators         1.0.14     2022-02-05 [1] CRAN (R 4.2.1)\n jpeg              0.1-10     2022-11-29 [1] CRAN (R 4.2.2)\n jsonlite          1.8.8      2023-12-04 [1] CRAN (R 4.2.3)\n kableExtra        1.4.0      2024-01-24 [1] CRAN (R 4.2.1)\n knitr           * 1.45       2023-10-30 [1] CRAN (R 4.2.3)\n labeling          0.4.3      2023-08-29 [1] CRAN (R 4.2.3)\n later             1.3.2      2023-12-06 [1] CRAN (R 4.2.3)\n latex2exp         0.9.6      2022-11-28 [1] CRAN (R 4.2.3)\n lattice           0.22-5     2023-10-24 [1] CRAN (R 4.2.3)\n lavaan            0.6-17     2023-12-20 [1] CRAN (R 4.2.3)\n lifecycle         1.0.4      2023-11-07 [1] CRAN (R 4.2.3)\n lubridate       * 1.9.3      2023-09-27 [1] CRAN (R 4.2.3)\n magrittr          2.0.3      2022-03-30 [1] CRAN (R 4.2.1)\n MASS              7.3-60.0.1 2024-01-13 [1] CRAN (R 4.2.3)\n Matrix          * 1.6-5      2024-01-11 [1] CRAN (R 4.2.3)\n memoise           2.0.1      2021-11-26 [1] CRAN (R 4.2.3)\n mgcv              1.9-1      2023-12-21 [1] CRAN (R 4.2.3)\n mime              0.12       2021-09-28 [1] CRAN (R 4.2.0)\n miniUI            0.1.1.1    2018-05-18 [1] CRAN (R 4.2.3)\n mnormt            2.1.1      2022-09-26 [1] CRAN (R 4.2.1)\n munsell           0.5.0      2018-06-12 [1] CRAN (R 4.2.1)\n networkD3         0.4        2017-03-18 [1] CRAN (R 4.2.3)\n nlme              3.1-164    2023-11-27 [1] CRAN (R 4.2.3)\n nnet              7.3-19     2023-05-03 [1] CRAN (R 4.2.3)\n patchwork         1.2.0      2024-01-08 [1] CRAN (R 4.2.3)\n pbapply           1.7-2      2023-06-27 [1] CRAN (R 4.2.3)\n pbivnorm          0.6.0      2015-01-23 [1] CRAN (R 4.2.0)\n pegas             1.3        2023-12-13 [1] CRAN (R 4.2.3)\n permute           0.9-7      2022-01-27 [1] CRAN (R 4.2.1)\n pillar            1.9.0      2023-03-22 [1] CRAN (R 4.2.3)\n pkgbuild          1.4.3      2023-12-10 [1] CRAN (R 4.2.3)\n pkgconfig         2.0.3      2019-09-22 [1] CRAN (R 4.2.1)\n pkgload           1.3.4      2024-01-16 [1] CRAN (R 4.2.3)\n plyr              1.8.9      2023-10-02 [1] CRAN (R 4.2.3)\n png               0.1-8      2022-11-29 [1] CRAN (R 4.2.2)\n profvis           0.3.8      2023-05-02 [1] CRAN (R 4.2.3)\n promises          1.2.1      2023-08-10 [1] CRAN (R 4.2.3)\n proto             1.0.0      2016-10-29 [1] CRAN (R 4.2.3)\n psych             2.4.1      2024-01-18 [1] CRAN (R 4.2.1)\n purrr           * 1.0.2      2023-08-10 [1] CRAN (R 4.2.3)\n qgraph            1.9.8      2023-11-03 [1] CRAN (R 4.2.3)\n quadprog          1.5-8      2019-11-20 [1] CRAN (R 4.2.0)\n qvalue            2.30.0     2022-11-01 [1] Bioconductor\n R6                2.5.1      2021-08-19 [1] CRAN (R 4.2.1)\n RColorBrewer      1.1-3      2022-04-03 [1] CRAN (R 4.2.0)\n Rcpp              1.0.12     2024-01-09 [1] CRAN (R 4.2.3)\n readr           * 2.1.5      2024-01-10 [1] CRAN (R 4.2.3)\n related         * 1.0        2022-07-14 [1] local\n remotes           2.4.2.1    2023-07-18 [1] CRAN (R 4.2.3)\n reshape2          1.4.4      2020-04-09 [1] CRAN (R 4.2.1)\n rlang             1.1.3      2024-01-10 [1] CRAN (R 4.2.3)\n rmarkdown         2.25       2023-09-18 [1] CRAN (R 4.2.3)\n robustbase        0.99-1     2023-11-29 [1] CRAN (R 4.2.3)\n rpart             4.1.23     2023-12-05 [1] CRAN (R 4.2.3)\n rstudioapi        0.15.0     2023-07-07 [1] CRAN (R 4.2.3)\n scales            1.3.0      2023-11-28 [1] CRAN (R 4.2.3)\n seqinr            4.2-36     2023-12-08 [1] CRAN (R 4.2.3)\n sessioninfo       1.2.2      2021-12-06 [1] CRAN (R 4.2.3)\n shiny             1.8.0      2023-11-17 [1] CRAN (R 4.2.3)\n SNPRelate         1.36.1     2024-01-25 [1] Github (zhengxwen/SNPRelate@19af345)\n snpStats        * 1.48.0     2022-11-01 [1] Bioconductor\n StAMPP            1.6.3      2021-08-08 [1] CRAN (R 4.2.1)\n stringi           1.8.3      2023-12-11 [1] CRAN (R 4.2.3)\n stringr         * 1.5.1      2023-11-14 [1] CRAN (R 4.2.3)\n survival        * 3.5-7      2023-08-14 [1] CRAN (R 4.2.3)\n svglite           2.1.3      2023-12-08 [1] CRAN (R 4.2.3)\n systemfonts       1.0.5      2023-10-09 [1] CRAN (R 4.2.3)\n tensorA           0.36.2.1   2023-12-13 [1] CRAN (R 4.2.3)\n tibble          * 3.2.1      2023-03-20 [1] CRAN (R 4.2.3)\n tidyr           * 1.3.1      2024-01-24 [1] CRAN (R 4.2.1)\n tidyselect        1.2.0      2022-10-10 [1] CRAN (R 4.2.3)\n tidyverse       * 2.0.0      2023-02-22 [1] CRAN (R 4.2.3)\n timechange        0.3.0      2024-01-18 [1] CRAN (R 4.2.3)\n tzdb              0.4.0      2023-05-12 [1] CRAN (R 4.2.3)\n urlchecker        1.0.1      2021-11-30 [1] CRAN (R 4.2.3)\n usethis           2.2.2      2023-07-06 [1] CRAN (R 4.2.3)\n utf8              1.2.4      2023-10-22 [1] CRAN (R 4.2.3)\n vctrs             0.6.5      2023-12-01 [1] CRAN (R 4.2.3)\n vegan             2.6-4      2022-10-11 [1] CRAN (R 4.2.3)\n viridisLite       0.4.2      2023-05-02 [1] CRAN (R 4.2.3)\n withr             3.0.0      2024-01-16 [1] CRAN (R 4.2.3)\n xfun              0.41       2023-11-01 [1] CRAN (R 4.2.3)\n xml2              1.3.6      2023-12-04 [1] CRAN (R 4.2.3)\n xtable            1.8-4      2019-04-21 [1] CRAN (R 4.2.1)\n yaml              2.3.8      2023-12-11 [1] CRAN (R 4.2.3)\n zlibbioc          1.44.0     2022-11-01 [1] Bioconductor\n\n [1] C:/Users/dev093/AppData/Local/R/win-library/4.2\n [2] C:/Program Files/R/R-4.2.1/library\n\n──────────────────────────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "main_code.html#load-packages",
    "href": "main_code.html#load-packages",
    "title": "Let’s get started",
    "section": "Load packages",
    "text": "Load packages\n\nlibrary(dartRverse)\nlibrary(adegenet)\nlibrary(diveRsity)\nlibrary(snpStats) #only for LD\nlibrary(ggtern) # for HWE diagnostics\nlibrary(related)"
  },
  {
    "objectID": "main_code.html#bull-shark",
    "href": "main_code.html#bull-shark",
    "title": "Let’s get started",
    "section": "Bull shark",
    "text": "Bull shark\nData from Devloo-Delva, Burridge, et al. (2023).\n\n\n\nThe Bull Shark\n\n\n\ndata.file &lt;- \"data/Bull_shark_DArTcap_1rowGT.csv\"\nmetadata.file &lt;- \"data/Bull_shark_DArTcap_metadata.csv\""
  },
  {
    "objectID": "main_code.html#northern-river-shark",
    "href": "main_code.html#northern-river-shark",
    "title": "Let’s get started",
    "section": "Northern River shark",
    "text": "Northern River shark\nData from Feutry et al. (2020).\nAround 470 G. garricki samples were collected from 11 different sampling locations in Northern Australia and Papua New Guinea.\n\n\n\nThe Northern River shark\n\n\n\ndata.file &lt;- \"data/Northern_river_shark_DArTcap_1rowGT.csv\"\nmetadata.file &lt;- \"data/Northern_river_shark_DArTcap_metadata.csv\""
  },
  {
    "objectID": "main_code.html#blue-shark",
    "href": "main_code.html#blue-shark",
    "title": "Let’s get started",
    "section": "Blue shark",
    "text": "Blue shark\nData from Nikolic et al. (2023).\n\n\n\nThe Blue Shark\n\n\n\ndata.file &lt;- \"data/Blue_shark_DArTSeq_1rowGT_subset.csv\"\nmetadata.file &lt;- \"data/Blue_shark_DArTseq_metadata.csv\""
  },
  {
    "objectID": "main_code.html#import-data",
    "href": "main_code.html#import-data",
    "title": "Let’s get started",
    "section": "Import data",
    "text": "Import data\n\ndata.gl &lt;- dartR.base::gl.read.dart(filename = data.file,\n                                ind.metafile = metadata.file, \n                                verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.read.dart \nStarting utils.read.dart \nCompleted: utils.read.dart \nStarting utils.dart2genlight \nIds for individual metadata does not match the number of ids in the SNP data file. Maybe this is fine if a subset matches.\nind.metafile ids not matched were:\n [1] \"GGA004\"  \"GGA025\"  \"GGA072\"  \"GGA192\"  \"GGA223\"  \"GGA227\"  \"GGA273\" \n [8] \"GGA274\"  \"GGA275\"  \"GGA276\"  \"GGA277\"  \"GGA278\"  \"GGA279\"  \"GGA280\" \n[15] \"GGA281\"  \"GGA282\"  \"GGA283\"  \"GGA284\"  \"GGA285\"  \"GGA286\"  \"GGA287\" \n[22] \"GGA288\"  \"GGA289\"  \"GGA290\"  \"GGA291\"  \"GGA292\"  \"GGA293\"  \"GGA294\" \n[29] \"GGA295\"  \"GGA296\"  \"GGA297\"  \"GGA298\"  \"GGA299\"  \"GGA300\"  \"GGA301\" \n[36] \"GGA302\"  \"GGA303\"  \"GGA312\"  \"GGA313\"  \"GGA314\"  \"GGA315\"  \"GGA316\" \n[43] \"GGA317\"  \"GGA318\"  \"GGA319\"  \"GGA320\"  \"GGA321\"  \"GGA322\"  \"GGA323\" \n[50] \"GGA324\"  \"GGA325\"  \"GGA326\"  \"GGL034\"  \"GGL035\"  \"GGL036\"  \"GGL037\" \n[57] \"GGL038\"  \"GGL039\"  \"GGL040\"  \"GGL041\"  \"GGL042\"  \"GGL043\"  \"GGL044\" \n[64] \"GGL045\"  \"GGL046\"  \"GGL047\"  \"GGL048\"  \"GGL049\"  \"GGSA012\"\nCompleted: utils.dart2genlight \nStarting gl.compliance.check \n  Processing genlight object with SNP data\n  Checking coding of SNPs\n    SNP data scored NA, 0, 1 or 2 confirmed\n  Checking for population assignments\n    Population assignments confirmed\n  Checking locus metrics and flags\n  Recalculating locus metrics\n  Checking for monomorphic loci\n    Dataset contains monomorphic loci\n  Checking for loci with all missing data\n    No loci with all missing data detected\n  Checking whether individual names are unique.\n  Checking for individual metrics\n    Individual metrics confirmed\n  Spelling of coordinates checked and changed if necessary to \n            lat/lon\nCompleted: gl.compliance.check \nCompleted: :: \n Completed: dartR.base \n Completed: gl.read.dart"
  },
  {
    "objectID": "main_code.html#save-raw-data",
    "href": "main_code.html#save-raw-data",
    "title": "Let’s get started",
    "section": "Save raw data",
    "text": "Save raw data\n\nsave(data.gl, file = \"data/raw_genlight.Rdata\")"
  },
  {
    "objectID": "main_code.html#quality-filtering",
    "href": "main_code.html#quality-filtering",
    "title": "Let’s get started",
    "section": "Quality filtering",
    "text": "Quality filtering\nThe order of filtering can be important and requires some thought. The filtering steps may change depending on the analysis you intend to run. There is no one-fits-all approach to SNP filtering.\n\n\n\n\n\n\nWarning\n\n\n\nBe careful not to over-filter. The objective is to get an appropriate balance between signal to noise ratio, not to eliminate noise altogether at the expense of also taking out some signal. This balance will depend on downstream application.\nA good strategy is to undertake an exploratory analysis first, whereby you experiment with filtering. Perhaps start with very stringent filtering, examine the impact on the final analysis, then progressively reduce the stringency to select the minimal filtering regime that still delivers a stable outcome. Play with your data to get a feel for the balance between signal to noise ratio, in the context of the analyses you propose to subsequently undertake.\n\n\n\nAverage reproducibility\nDArT includes several technical replicates (~30 %) of your samples to see how reproducible the results are. Some SNPs are less reliable than others.\nThis metric is based on all individuals in your original dataset.\nIt is not advised to filter on reproducibility &gt; 0.99, since you are like to remove more heterozygous SNPs (i.e. more difficult to genotype consistently).\n\nReport reproducibilityFilter reproducibility\n\n\n\ndartR.base::gl.report.reproducibility(data.gl, verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.reproducibility \n  Reporting Repeatability by Locus\n  No. of loci = 9111 \n  No. of individuals = 467 \n    Minimum      :  0.788618 \n    1st quartile :  0.996667 \n    Median       :  1 \n    Mean         :  0.9932215 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.07 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%  1.000000     5944    65.2     3167    34.8\n2       95%  1.000000     5944    65.2     3167    34.8\n3       90%  1.000000     5944    65.2     3167    34.8\n4       85%  1.000000     5944    65.2     3167    34.8\n5       80%  1.000000     5944    65.2     3167    34.8\n6       75%  1.000000     5944    65.2     3167    34.8\n7       70%  1.000000     5944    65.2     3167    34.8\n8       65%  1.000000     5944    65.2     3167    34.8\n9       60%  1.000000     5944    65.2     3167    34.8\n10      55%  1.000000     5944    65.2     3167    34.8\n11      50%  1.000000     5944    65.2     3167    34.8\n12      45%  1.000000     5944    65.2     3167    34.8\n13      40%  1.000000     5944    65.2     3167    34.8\n14      35%  1.000000     5944    65.2     3167    34.8\n15      30%  0.996753     6579    72.2     2532    27.8\n16      25%  0.996667     6846    75.1     2265    24.9\n17      20%  0.993506     7492    82.2     1619    17.8\n18      15%  0.990909     7746    85.0     1365    15.0\n19      10%  0.984127     8200    90.0      911    10.0\n20       5%  0.957792     8667    95.1      444     4.9\n21       0%  0.788618     9111   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.reproducibility \n\n\n\n\n\ndata.gl &lt;- dartR.base::gl.filter.reproducibility(data.gl, threshold = 0.98, \n                                                 plot.colors = c(\"#2171B5\", \"#6BAED6\"),\n                                                 verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.filter.reproducibility \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.filter.reproducibility \n\n\n\n\n\n\n\nInvariable sites\nYou want to remove SNP that are not informative for population-level analyses. This will improve computation time and reduce the noise in the data.\n\nAll NA\nRemoves SNPs that have missing data for all samples.\n\ndata.gl &lt;- dartR.base::gl.filter.allna(data.gl, verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.filter.allna \nCompleted: :: \n Completed: dartR.base \n Completed: gl.filter.allna \n\n\n\n\nMonomorphic\nLooks for loci which are all 0 (or 1 or 2) over the all samples. These are not informative.\n\nReport monomorphsFilter monomorphs\n\n\n\ndartR.base::gl.report.monomorphs(data.gl, verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.monomorphs \n\n  No. of loci: 8364 \n    Polymorphic loci: 5318 \n    Monomorphic loci: 3046 \n    Loci scored all NA: 1 \n  No. of individuals: 467 \n  No. of populations: 5 \n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.monomorphs \n\n\n\n\n\ndata.gl &lt;- dartR.base::gl.filter.monomorphs(data.gl, verbose = 5)\n\nStarting :: \n[dartR.base vers. 0.88 Build = v.2023.2 ]\n Starting dartR.base \n[dartR.base vers. 0.88 Build = v.2023.2 ]\n Starting gl.filter.monomorphs \n[dartR.base vers. 0.88 Build = v.2023.2 ]\n  Processing genlight object with SNP data\n  Identifying monomorphic loci\n  Removing monomorphic loci and loci with all missing \n                       data\n    Original No. of loci: 8364 \n    Monomorphic loci: 3046 \n    Loci scored all NA: 1 \n    No. of loci deleted: 3046 \n    No. of loci retained: 5318 \n    No. of individuals: 467 \n    No. of populations: 5 \nCompleted: :: \n Completed: dartR.base \n Completed: gl.filter.monomorphs \n\n\n\n\n\n\n\nMinor Allele Frequency\nSome mutations only occur in a couple of individuals, these are not informative for population-level analyses. Loci with a low Minor Allele Frequency (MAF) might not be informative enough and just increase computation time.\n\n\n\n\n\n\nWarning\n\n\n\nThe threshold should be lower than the proportion of your smallest sampling location. For example, if one of your sample sites has 5 samples out of a total of 100 samples, the MAF should not be &lt; 0.05. Else, your risk loosing the informative markers that differntiate that population.\n\n\n\nReport mafFilter maf\n\n\n\ndartR.base::gl.report.maf(data.gl, verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.maf \nStarting :: \n\n Starting dartR.base \n\n Starting gl.report.maf \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Cambridge Gulf \n  No. of loci = 2510 \n  No. of individuals = 30 \n    Minimum      :  0.0167 \n    1st quantile :  0.0345 \n    Median       :  0.1667 \n    Mean         :  0.1925474 \n    3r quantile  :  0.3167 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.03 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Daly River \n  No. of loci = 2542 \n  No. of individuals = 30 \n    Minimum      :  0.0167 \n    1st quantile :  0.0345 \n    Median       :  0.1511 \n    Mean         :  0.1870297 \n    3r quantile  :  0.3167 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.04 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population King Sound \n  No. of loci = 1516 \n  No. of individuals = 19 \n    Minimum      :  0.0263 \n    1st quantile :  0.0278 \n    Median       :  0.1316 \n    Mean         :  0.1872923 \n    3r quantile  :  0.3158 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.03 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Papua New Guinea \n  No. of loci = 1642 \n  No. of individuals = 4 \n    Minimum      :  0.125 \n    1st quantile :  0.125 \n    Median       :  0.25 \n    Mean         :  0.2812373 \n    3r quantile  :  0.375 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.02 \n\n  Reporting Minor Allele Frequency (MAF) by Locus for population Van Diemen Gulf \n  No. of loci = 4965 \n  No. of individuals = 384 \n    Minimum      :  0.0013 \n    1st quantile :  0.0026 \n    Median       :  0.0084 \n    Mean         :  0.09757069 \n    3r quantile  :  0.1706 \n    Maximum      :  0.5 \n    Missing Rate Overall:  0.05 \n\n  Reporting Minor Allele Frequency (MAF) by Locus OVERALL\n  No. of loci = 5318 \n  No. of individuals = 467 \n    Minimum      :  0.0011 \n    1st quantile :  0.0022 \n    Median       :  0.00755 \n    Mean         :  0.09431826 \n    3r quantile  :  0.15755 \n    Maximum      :  0.4989 \n    Missing Rate Overall:  0.06 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%    0.4989        2     0.0     5316   100.0\n2       95%    0.4197      267     5.0     5051    95.0\n3       90%    0.3462      532    10.0     4786    90.0\n4       85%    0.2842      799    15.0     4519    85.0\n5       80%    0.2192     1064    20.0     4254    80.0\n6       75%    0.1576     1330    25.0     3988    75.0\n7       70%    0.1039     1597    30.0     3721    70.0\n8       65%    0.0511     1862    35.0     3456    65.0\n9       60%    0.0184     2131    40.1     3187    59.9\n10      55%    0.0109     2397    45.1     2921    54.9\n11      50%    0.0075     2678    50.4     2640    49.6\n12      45%    0.0054     2954    55.5     2364    44.5\n13      40%    0.0043     3222    60.6     2096    39.4\n14      35%    0.0033     3487    65.6     1831    34.4\n15      30%    0.0026     3731    70.2     1587    29.8\n16      25%    0.0022     4118    77.4     1200    22.6\n17      20%    0.0021     4257    80.0     1061    20.0\n18      15%    0.0012     4555    85.7      763    14.3\n19      10%    0.0011     5030    94.6      288     5.4\n20       5%    0.0011     5318   100.0        0     0.0\n21       0%    0.0011     5318   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.maf \n\n\n\n\n\ndata.gl &lt;- dartR.base::gl.filter.maf(data.gl, threshold = 0.005, \n                                     plot.colors = c(\"#2171B5\", \"#6BAED6\"),\n                                     verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.filter.maf \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.filter.maf \n\n\n\n\n\n\n\n\nRead depth\nRead depth has a considerable influence on the veracity of SNP calls. The low values arise because of chance variation in the coverage of particular bases. The high values arise because of the differential efficiency of the PCR steps or paralogous fragments. Under some circumstances, it might be sensible to push the lower threshold for read depth higher than has been used by the Diversity Arrays Technology in their report. Analyses that rely heavily on the accuracy of calls of heterozygotes may require a higher threshold for read depth, say 10x, for example.\nCheck the histogram to see how many SNP have low or high counts. Low counts might not be reliably genotyped. High counts may be due to paralogous fragments.\n\nReport rdepthFilter rdepth\n\n\n\ndartR.base::gl.report.rdepth(data.gl, verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.rdepth \n  Reporting Read Depth by Locus\n  No. of loci = 3027 \n  No. of individuals = 467 \n    Minimum      :  2 \n    1st quartile :  12.8 \n    Median       :  43.2 \n    Mean         :  68.76938 \n    3r quartile  :  89.9 \n    Maximum      :  573.8 \n    Missing Rate Overall:  0.05 \n\n\n\n\n\n   Quantile Threshold Retained Percent Filtered Percent\n1      100%     573.8        1     0.0     3026   100.0\n2       95%     249.7      152     5.0     2875    95.0\n3       90%     156.7      303    10.0     2724    90.0\n4       85%     122.9      455    15.0     2572    85.0\n5       80%     103.6      606    20.0     2421    80.0\n6       75%      90.0      757    25.0     2270    75.0\n7       70%      79.3      910    30.1     2117    69.9\n8       65%      70.4     1061    35.1     1966    64.9\n9       60%      61.6     1211    40.0     1816    60.0\n10      55%      51.4     1363    45.0     1664    55.0\n11      50%      43.2     1514    50.0     1513    50.0\n12      45%      35.8     1666    55.0     1361    45.0\n13      40%      28.6     1818    60.1     1209    39.9\n14      35%      21.9     1969    65.0     1058    35.0\n15      30%      17.1     2120    70.0      907    30.0\n16      25%      12.8     2272    75.1      755    24.9\n17      20%       9.4     2422    80.0      605    20.0\n18      15%       6.9     2576    85.1      451    14.9\n19      10%       5.0     2728    90.1      299     9.9\n20       5%       3.3     2879    95.1      148     4.9\n21       0%       2.0     3027   100.0        0     0.0\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.rdepth \n\n\n\n\n\ndata.gl &lt;- dartR.base::gl.filter.rdepth(data.gl, lower = 5, upper = 200, verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.filter.rdepth \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.filter.rdepth \n\n\n\n\n\n\n\nMissing data for SNPs\nCall rate is defined as 1 - proportion of missing data. SNPs with too much missing data are not reliable and informative.\nCall Rate for SNPs can arise from two sources. The first source is where a missing value arises because the sequence tag bearing the target SNP cannot be amplified – there has been a mutation at one or both of the restriction sites. The second source of missing values is where the read depth is insufficient to make a reliable call on the SNP. Either way, the SNP is not called and is recorded as NA. A first step in filtering on Call Rate is to examine the distribution of Call Rates across loci. We use the function gl.report.callrate to yield the following output and graph.\n\nReport SNP callrateFilter SNP callrate\n\n\n\ndartR.base::gl.report.callrate(data.gl, method = \"loc\", verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n  Reporting Call Rate by Locus\n  No. of loci = 2513 \n  No. of individuals = 467 \n    Minimum      :  0.20985 \n    1st quartile :  0.987152 \n    Median       :  0.993576 \n    Mean         :  0.9637389 \n    3r quartile  :  1 \n    Maximum      :  1 \n    Missing Rate Overall:  0.0363 \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\n\n\n\n\ndata.gl &lt;- dartR.base::gl.filter.callrate(data.gl, method = \"loc\",  threshold = 0.8, verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.filter.callrate \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.filter.callrate \n\n\n\n\n\n\n\nMissing data for individuals\nCall rate is defined as 1 - proportion of missing data. Samples with degraded DNA will have a lot of missing sequencing data. These samples are unreliably sequenced and should be removed.\n\nReport ind. callrateFilter ind. callrate\n\n\n\ndartR.base::gl.report.callrate(data.gl, method = \"ind\", verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.callrate \n\n  Reporting Call Rate by Individual\n  No. of loci = 2373 \n  No. of individuals = 467 \n    Minimum      :  0.4551201 \n    1st quartile :  0.9903076 \n    Median       :  0.9928361 \n    Mean         :  0.9871529 \n    3r quartile  :  0.9945217 \n    Maximum      :  0.997893 \n    Missing Rate Overall:  0.0128 \n\nListing 5 populations and their average CallRates\n  Monitor again after filtering\n        Population CallRate   N\n1   Cambridge Gulf   0.9898  30\n2       Daly River   0.9829  30\n3       King Sound   0.9830  19\n4 Papua New Guinea   0.9854   4\n5  Van Diemen Gulf   0.9875 384\n\nListing 20 individuals with the lowest CallRates\n  Use this list to see which individuals will be lost on filtering by individual\n  Set ind.to.list parameter to see more individuals\n   Individual  CallRate\n1      GGL032 0.4551201\n2     GGSA011 0.4938896\n3     GGSA016 0.6392752\n4      GGA051 0.6814159\n5      GGA053 0.7568479\n6      GGD029 0.7926675\n7      GGA252 0.9447956\n8      GGA241 0.9481669\n9      GGA188 0.9603877\n10     GGK013 0.9713443\n11     GGA176 0.9717657\n12     GGL001 0.9721871\n13     GGS029 0.9759798\n14    GGKS002 0.9768226\n15     GGA350 0.9785082\n16     GGD011 0.9793510\n17     GGK008 0.9797724\n18    GGKS005 0.9801938\n19       GG19 0.9806153\n20     GGK006 0.9814581\n\n)\n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.callrate \n\n\n\n\n\ndata.gl &lt;- dartR.base::gl.filter.callrate(data.gl, method = \"ind\", threshold = 0.8, verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.filter.callrate \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.filter.callrate \n\n\n\n\n\n\n\nIndividual heterozygosity\nDelete individuals with a heterozygosity below or above the threshold. High heterozygosity could be due to DNA cross-contamination from other individuals. Low heterozygosity could be due to population structure, inbreeding or excess missing values (normally the latter should be filtered out already).\n\nReport ind. heterozygosityFilter ind. heterozygosity\n\n\n\ndartR.base::gl.report.heterozygosity(data.gl, method = \"ind\", verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.heterozygosity \nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.heterozygosity \n\n\n\n\n\ndata.gl &lt;- dartR.base::gl.filter.heterozygosity(data.gl, t.lower = 0, t.upper = 0.3,  verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.filter.heterozygosity \nCompleted: :: \n Completed: dartR.base \n Completed: gl.filter.heterozygosity \n\n\n\n\n\n\n\nInvariable sites\nWhen filtering has resulted in removal of some individuals or populations, variation at several loci may be lost. Some loci may even be scored as missing across all individuals. You may wish to remove these monomorphic loci from your dataset.\n\nFilter missing dataReport monomorphsFilter monomorphs\n\n\n\ndata.gl &lt;- dartR.base::gl.filter.allna(data.gl, verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.filter.allna \nCompleted: :: \n Completed: dartR.base \n Completed: gl.filter.allna \n\n\n\n\n\ndartR.base::gl.report.monomorphs(data.gl, verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.monomorphs \n\n  No. of loci: 2373 \n    Polymorphic loci: 2373 \n    Monomorphic loci: 0 \n    Loci scored all NA: 1 \n  No. of individuals: 460 \n  No. of populations: 5 \n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.monomorphs \n\n\n\n\n\ndata.gl &lt;- dartR.base::gl.filter.monomorphs(data.gl, verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.filter.monomorphs \nCompleted: :: \n Completed: dartR.base \n Completed: gl.filter.monomorphs \n\n\n\n\n\n\n\nLinked loci\nSNPs that are close together will be inherited together. Consequently, linked SNPs are not independent and will bias the data by inflating the signal.\n\n\n\n\n\n\nTip\n\n\n\nDo not filter on LD, if you aim to analyse you data of effective population size based on linkage disequilibrium.\n\n\n\nShort-distance linkage\nSequence tags can contain more than one callable SNP marker. Because of their close proximity, these multiple SNPs within a single sequence tag (referred to in dartR as ‘secondaries’ are likely to be strongly linked (inherited together). This is problematic for many analyses, so one might wish to filter out the multiple SNPs to leave only one per sequence tag.\nThis function removes SNPs on the same 70 bp sequence tag, it retains the SNP with the highest RepAvg (average reproducibility) andrAvgPIC (average polymorphic information content), respectively.\n\nReport secondariesFilter secondaries\n\n\n\ndartR.base::gl.report.secondaries(data.gl, verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.secondaries \n\n\n\n\n\n  Total number of SNP loci scored: 2373 \n   Number of sequence tags in total: 2216 \n   Estimated number of invariant sequence tags: 15002 \n   Number of sequence tags with secondaries: 145 \n   Number of secondary SNP loci that would be removed on \n            filtering: 157 \n   Number of SNP loci that would be retained on filtering: 2216 \n   Number of invariant sites in sequenced tags: 134077 \n   Mean length of sequence tags: 61.57491 \n   Total Number of invariant sites (including invariant sequence \n            tags): 1057824 \nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.secondaries \n\n\n               Param        Value\n1       n.total.tags 2.216000e+03\n2 n.SNPs.secondaries 1.570000e+02\n3   n.invariant.tags 1.500200e+04\n4 n.tags.secondaries 1.450000e+02\n5          n.inv.gen 1.340770e+05\n6       mean.len.tag 6.157491e+01\n7        n.invariant 1.057824e+06\n8             Lambda 1.377714e-01\n\n\n\n\n\ndata.gl &lt;- dartR.base::gl.filter.secondaries(data.gl, method = \"best\", verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.filter.secondaries \nCompleted: :: \n Completed: dartR.base \n Completed: gl.filter.secondaries \n\n\n\n\n\n\n\nLong-distance linkage\nNot running this because it takes too long, but consider using this if you have many SNPs and a small genome.\n\nReport ld.mapReport ldFilter\n\n\n\nld.report &lt;- dartR.base::gl.report.ld.map(data.gl, ld.stat = \"R.squared\", verbose = 1)\n# changes between ''.' and '_' depending on your version of snpStats\nld.report$ld_stat &lt;- ld.report$ld.stat \nld.report$locus_a.stat_keep &lt;- ld.report$locus_a.stat.keep\nld.report$locus_b.stat_keep &lt;- ld.report$locus_b.stat.keep\n\n\n\n\ndartR.base::gl.report.ld(data.gl, verbose = 1)\n\n\n\n\ndata.gl &lt;- dartR.base::gl.filter.ld(data.gl, ld.report, threshold = 0.25, verbose = 1)\n\n\n\n\n\n\n\nHardy-Weinberg Equilibrium\nThe Hardy–Weinberg equilibrium (HWE) states that allele and genotype frequencies in a population will remain constant from generation to generation in the absence of other evolutionary influences. SNPs that are sampled from a population in demographic equilibrium are expected to follow this equation: \\(p^2 + 2pq + q^2 = 1\\), where \\(p\\) is the frequency of the major allele (A) and \\(q\\) is frequency of the minor allele (a).\nIn the simplest case of a single locus with two alleles denoted A and a with frequencies \\(f(A) = p\\) and \\(f(a) = q\\), respectively, the expected genotype frequencies under random mating are \\(f(AA) = p^2\\) for the AA homozygotes, \\(f(aa) = q^2\\) for the aa homozygotes, and \\(f(Aa) = 2pq\\) for the heterozygotes.\n\n\n\n\n\n\nWarning\n\n\n\nThere are several factors that can cause deviations from Hardy-Weinberg proportions including:\n\nMutations\nFinite population size\nSelection\nPopulation structure\nAge structure\nAssortative mating\nSex linkage\nNon-random sampling\nGenotyping errors\n\nTherefore, testing for Hardy-Weinberg proportions should be a process that involves a careful evaluation of the results, a good place to start is Waples (2015). Note that tests for H-W proportions are only valid if there is no population substructure (assuming random mating) and have sufficient power only when there is sufficient sample size (n individuals &gt; 15).\n\n\n\nhwe diagnosticsReport hweFilter hwe\n\n\n\ndartR.base::gl.diagnostics.hwe(data.gl, verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.diagnostics.hwe \nStarting gl.colors \nSelected color type 2c \nCompleted: gl.colors \n\n\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n\n\n\n\n\n\n\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \nStarting gl.colors \nSelected color type 2c \nCompleted: gl.colors \nStarting utils.jackknife \n  Processing genlight object with SNP data\nThe variation of Fis and Fst, respectively\n (measured as \n               standard error with the Jackknife method - see De Meeus 2018) \n               is: 2.10540973158501e-06, 1.65673151873847e-06 \n Fis vs Fst \n               ratio is: 1.27 \n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 7 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 7 rows containing missing values (`geom_point()`).\n\n\n\n\n\n      Population nSig nExpected Deficiency Excess PropDeficiency ChiSquare\n  Cambridge Gulf   55     110.8         40     15      0.7272727  2184.287\n      Daly River   78     110.8         52     26      0.6666667  2233.706\n      King Sound   42     110.8         14     28      0.3333333  1245.482\n Van Diemen Gulf  207     110.8        140     67      0.6763285  7903.792\n        pvalue\n  1.000000e+00\n  1.000000e+00\n  1.000000e+00\n 7.619698e-200\nCompleted: :: \n Completed: dartR.base \n Completed: gl.diagnostics.hwe \n\n\n\n\n\ndartR.base::gl.report.hwe(data.gl, verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.hwe \nStarting gl.colors \nSelected color type 2c \nCompleted: gl.colors \n\n\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n\n\n\n\n\n\n\n\n    Reporting significant departures from Hardy-Weinberg \n            Equilibrium\n    NB: Departures significant at the alpha level of 0.05 are listed\n    Adjustment of p-values for multiple comparisons vary\n                    with sample size\n         Population            Locus Hom_1 Het Hom_2   N         Prob Sig\n    Van Diemen Gulf 100001551-62-C/T   153 153    72 378 3.550897e-03 sig\n         Daly River 100001738-59-T/C    22   3     2  27 3.726019e-02 sig\n         Daly River 100001760-48-G/A    23   3     2  28 3.460801e-02 sig\n     Cambridge Gulf 100001906-15-C/T    22   5     3  30 3.228943e-02 sig\n    Van Diemen Gulf 100002098-21-C/T   115 206    58 379 3.544120e-02 sig\n---                                                                      \n    Van Diemen Gulf   8171499-22-A/G     3 212   162 377 1.542178e-15 sig\n     Cambridge Gulf   8171660-43-C/T     0  22     8  30 1.832795e-03 sig\n         Daly River   8171660-43-C/T     0  24     4  28 8.156677e-05 sig\n         King Sound   8171660-43-C/T     1  18     0  19 1.510845e-04 sig\n    Van Diemen Gulf   8171660-43-C/T     8 267   103 378 4.829275e-26 sig\n    Prob.adj Sig.adj npop\n          NA      NA    1\n          NA      NA    1\n          NA      NA    1\n          NA      NA    1\n          NA      NA    1\n---                      \n          NA      NA    2\n          NA      NA    4\n          NA      NA    4\n          NA      NA    4\n          NA      NA    4\n\nCompleted: :: \n \nCompleted: dartR.base \n \nCompleted: gl.report.hwe \n\n\n\n\n\ndata.gl &lt;- dartR.base::gl.filter.hwe(data.gl, n.pop.threshold = 3, \n                                     mult.comp.adj = TRUE, \n                                     mult.comp.adj.method = \"BH\", \n                                     verbose = 1)\n\nStarting :: \n Starting dartR.base \n Starting gl.filter.hwe \nCompleted: :: \n\n Completed: dartR.base \n\n Completed: gl.filter.hwe \n\n\n\n\n\n\n\nRemove duplicate individuals\nSince DArT includes technical replicates and you could potentially recapture individuals, it important to remove replicate individuals. Duplicates individuals will inflate the signal you are investigating.\n\nres_dup &lt;- dartR.base::gl.report.replicates(data.gl,loc_threshold = 500, perc_geno = 0.85)\n\nStarting :: \n Starting dartR.base \n Starting gl.report.replicates \n  Processing genlight object with SNP data\n\n\n\n\n\nCompleted: :: \n Completed: dartR.base \n Completed: gl.report.replicates"
  },
  {
    "objectID": "main_code.html#filtering-conclusion",
    "href": "main_code.html#filtering-conclusion",
    "title": "Let’s get started",
    "section": "Filtering Conclusion",
    "text": "Filtering Conclusion\nInfluence of Planned Analyses\nPossibly the most influential consideration on filtering is the purpose for which the filtered data set is to be used.\n\nIf you are planning to generate high resolution linkage maps, then highly stringent filtering is warranted, and Diversity Arrays Technology would adjust their pipelines accordingly upon request. Similarly, if you are contemplating an analysis of relatedness or inbreeding, then stringent filtering might be warranted. In any case, it would be wise to start out with high stringency and then progressively relax the stringency and examine the impact on outcomes.\nIf your focus is on identifying sex-linked markers, which rely heavily on identifying markers that are heterozygous in XY individuals and homozygous in XX individuals, then a filtering threshold for read depth of 10x would be sensible. Sequencing volume in the context of genome size will provide an upper limit to how far you can push the read depth threshold, so in some cases, a high sequence volume service will need to be requested. Because the pipelines of Diversity Arrays Technology depend in part on Mendelian behaviour in the selection of SNP markers, and sex-linked loci do not behave in Mendelian fashion, you might also ask them to relax the stringency of some aspects of their filtering in generating the report.\nIf your focus is on Genome-wide Association Studies (GWAS) or identifying loci under selection, then noise in the data will not associate with phenotype, and so filtering can be less stringent in order to maximize the chances of identifying promising associations.\nPrincipal Coordinates Analysis PCA (and to a lesser extent, Principal Components Analysis, PCoA), rely on fully populated data matrices (no missing values). Classical PCA for example, cannot easily accommodate missing values. To overcome this, a balance must be struck between filtering on Call Rate and imputing the values of those missing values that remain. More stringent filtering on Call Rate, and less imputation; but more stringent filtering on Call Rate, more loss of potentially useful information or valuable samples. Refer to Georges et al. (2023) for further discussion of this point.\n\n\n\n\n\n\n\nTip\n\n\n\nThere is no hard and fast rule to guide decisions on filtering SNP datasets prior to a substantive analysis. The decisions are based on comparing the distribution of the parameters to be filtered (using one of the gl.report functions) and the purpose to which the filtered dataset is to be put. Sequencing volume can constrain options, and the likelihood of some level of contamination of samples or presence of inhibitors of the restriction enzymes can have a bearing on the decisions. It is important not to over filter because of the risk of introducing a level of systematic bias and because of the unnecessary loss of informative loci or individuals. An experimental approach is recommended, whereby different filtering regimes are tried (from stringent to less stringent) and checked for influence on analysis outcomes."
  },
  {
    "objectID": "main_code.html#principal-component-analysis",
    "href": "main_code.html#principal-component-analysis",
    "title": "Let’s get started",
    "section": "Principal Component Analysis",
    "text": "Principal Component Analysis\nPrincipal components analysis (PCA) is the most commonly recognised and used method for identifying population structure. Essentially, PCA aims to identify the main axes of variation in a dataset with each axis being independent of the next (i.e. there should be no correlation between them). The first component summarizes the major axis variation and the second the next largest and so on, until cumulatively all the available variation is explained. In the context of genetic data, PCA summarizes the major axes of variation in allele frequencies and then produces the coordinates of individuals along these axes. For the rest of the tutorial we will conduct a PCA to demonstrate how it can help give insight to population structure within species.\nThis analysis allows us to calculate principal components (PCs) that explain the differences between individuals in genetic data. The naming of each of these components is based on the percentage of variation in the data they explain, with principal component 1 (PC1) being the most explanatory PC of the data. For instance if PC1 explains 5.7%. PC2 will have the next largest contribution to the genetic variance, for example PC2 may contribute 3.4%. The overall variance should add up to 100%.\n\nPCA &lt;- dartR.base::gl.pcoa(data.gl, nfactors = 5, verbose = 0)\n\nStarting gl.colors \nSelected color type 2 \nCompleted: gl.colors \n\ndartR.base::gl.pcoa.plot(PCA, data.gl, xaxis = 1, yaxis = 2, verbose = 0)\n\n\n\n\n\n\ndartR.base::gl.pcoa.plot(PCA, data.gl, xaxis = 2, yaxis = 3, verbose = 0)\n\n\n\n\n\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\n\nHow many genetic clusters are present across the sequenced samples? A cluster can be defined as a group of individuals that are genetically very similar to each other. Each cluster is genetically distinct from other clusters.\nWhat is the relationship among these genetic clusters? i.e. which cluster is the most genetically distinct? Which genetic clusters are most similar to one another?\nHow many PCs is it worth plotting?\nCan you identify the cluster membership of each individual? There are a variety of ways to do this. For example, you can look at the PCA$scores and sort the columns by PC."
  },
  {
    "objectID": "main_code.html#fixation-indices",
    "href": "main_code.html#fixation-indices",
    "title": "Let’s get started",
    "section": "Fixation indices",
    "text": "Fixation indices\n\\(FST\\), also known as the fixation index, is an extremely important statistic in population genetics, molecular ecology and evolutionary biology. It is also arguably one of the most famous population genetic statistics you will encounter. \\(FST\\) essentially measures the level of genetic differentiation between two or more populations. It ranges from 0 (i.e. no genetic differentiation) to 1 (complete genetic differentiation)\nUltimately, it is quite a simple statistic to understand but it can sometimes take time to properly grasp. So we will go over the basics properly here. One of the most confusing things about \\(FST\\) is that are several different ways to define it. For ease of understanding, we will use a simple formulation:\n\\(FST=(HT−HS)/HT\\)\nFor simplicity, imagine we are examining two populations only. With this formulate, \\(HT\\) is the expected heterozygosity when the two populations are considered as one large meta-population. \\(HS\\) is the average expected heterozygosity in the two populations.\nYou might be thinking, hang on a minute… what do we mean by expected heterozygosity? To appreciate this, we need to think back to the Hardy-Weinberg expectation we learned about in Section 4.3.9. Remember that at a simple bi-allelic locus, \\(p\\) and \\(q\\) are the frequencies of the two alleles. We can calculate the expected frequency of heterozygotes with \\(2pq\\) - this is the expected heterozygosity.\nYou can use \\(FST\\) to identify the relationship between individuals, and it can be used to identify populations. To do this, you first need to define the members of each of your populations. You did this at the end of the PCA section where you identified cluster membership.\n\nfst.res &lt;- dartR.base::gl.fst.pop(data.gl, nboots = 100, verbose = 0)\nfst.res$Fsts\n\n                 Cambridge Gulf King Sound Daly River Van Diemen Gulf\nCambridge Gulf               NA         NA         NA              NA\nKing Sound           0.28898221         NA         NA              NA\nDaly River           0.09406955  0.3033545         NA              NA\nVan Diemen Gulf      0.11954153  0.2523445  0.0865569              NA\nPapua New Guinea     0.15241388  0.3989535  0.1833683       0.1691328\n                 Papua New Guinea\nCambridge Gulf                 NA\nKing Sound                     NA\nDaly River                     NA\nVan Diemen Gulf                NA\nPapua New Guinea               NA\n\nfst.res$Pvalues\n\n                 Cambridge Gulf King Sound Daly River Van Diemen Gulf\nCambridge Gulf               NA         NA         NA              NA\nKing Sound                    0         NA         NA              NA\nDaly River                    0          0         NA              NA\nVan Diemen Gulf               0          0          0              NA\nPapua New Guinea              0          0          0               0\n                 Papua New Guinea\nCambridge Gulf                 NA\nKing Sound                     NA\nDaly River                     NA\nVan Diemen Gulf                NA\nPapua New Guinea               NA\n\n## correction for multiple testing: Bonferroni, Benjamini-Hochberg\nFst.p.adj &lt;- stats::p.adjust(fst.res$Pvalues, \"BH\")\nFst.p.adj &lt;- matrix(Fst.p.adj, ncol = adegenet::nPop(data.gl))\ncolnames(Fst.p.adj) &lt;- adegenet::popNames(data.gl)\nrownames(Fst.p.adj) &lt;- adegenet::popNames(data.gl)\nFst.p.adj\n\n                 Cambridge Gulf Daly River King Sound Papua New Guinea\nCambridge Gulf               NA         NA         NA               NA\nDaly River                    0         NA         NA               NA\nKing Sound                    0          0         NA               NA\nPapua New Guinea              0          0          0               NA\nVan Diemen Gulf               0          0          0                0\n                 Van Diemen Gulf\nCambridge Gulf                NA\nDaly River                    NA\nKing Sound                    NA\nPapua New Guinea              NA\nVan Diemen Gulf               NA\n\nfixed.diff &lt;- dartR.base::gl.fixed.diff(data.gl, tloc = 0.1, verbose = 0)\nfixed.diff$fd\n\n                 Cambridge Gulf Daly River King Sound Papua New Guinea\nDaly River                    0                                       \nKing Sound                    9         15                            \nPapua New Guinea              6          3         23                 \nVan Diemen Gulf               0          0          5                4\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\n\nDo the \\(FST\\) metrics support the PCA results?\nDo you see a different significance in p-values when correcting for multiple comparisons?"
  },
  {
    "objectID": "main_code.html#fst-based-outliers",
    "href": "main_code.html#fst-based-outliers",
    "title": "Let’s get started",
    "section": "\\(FST\\)-based outliers",
    "text": "\\(FST\\)-based outliers\nGood to detect strong selective pressure\nThis method looks for \\(FST\\) outliers from a list of \\(FST\\)’s for different loci. It assumes that each locus has been genotyped in all populations with approximately equal coverage. Here, we identify loci ‘putatively’ under selection per population using the outflank method of Whitlock and Lotterhos (2015).\nOutFLANK estimates the distribution of \\(FST\\) based on a trimmed sample of \\(FST\\)’s. It assumes that the majority of loci in the center of the distribution are neutral and infers the shape of the distribution of neutral \\(FST\\) using a trimmed set of loci. Loci with the highest and lowest \\(FST\\)’s are trimmed from the data set before this inference, and the distribution of \\(FST df/(mean FST)\\) is assumed to follow a chi-square distribution. Based on this inferred distribution, each locus is given a q-value based on its quantile in the inferred null distribution.\nMore information here:\nDetection of the signal of selection from genome scan\n\noutliers &lt;- dartR.popgen::gl.outflank(data.gl,\n                        plot = TRUE,\n                        LeftTrimFraction = 0.05,\n                        RightTrimFraction = 0.05,\n                        Hmin = 0.1,\n                        qthreshold = 0.05,)\n\nStarting gl2gi \n  Processing genlight object with SNP data\nMatrix converted.. Prepare genind object...\nCompleted: gl2gi \nCalculating FSTs, may take a few minutes...\n\n\n\n\noutliers$outflank$numberLowFstOutliers\n\n[1] 0\n\noutliers$outflank$numberHighFstOutliers\n\n[1] 0"
  },
  {
    "objectID": "main_code.html#genotype-environment-associations",
    "href": "main_code.html#genotype-environment-associations",
    "title": "Let’s get started",
    "section": "Genotype-Environment associations",
    "text": "Genotype-Environment associations\nBetter at detecting weak selective pressures\nHere, we illustrate the use of Redundancy Analysis (RDA) as a genotype-environment association (GEA) method to detect loci under selection (Forester et al., 2018). RDA is a multivariate ordination technique that can be used to analyze many loci and environmental predictors simultaneously. RDA determines how groups of loci co-vary in response to the multivariate environment, and can detect processes that result in weak, multilocus molecular signatures (Forester et al., 2018).\nMore information here: Detecting multilocus adaptation using Redundancy Analysis (RDA)\n\ndata.gl.imputed &lt;- dartR.base::gl.impute(data.gl, parallel = FALSE) # no missing data allowed\n\nStarting :: \n Starting dartR.base \n Starting gl.impute \n  Processing genlight object with SNP data\n  Imputation based on drawing from the nearest neighbour\n  Residual missing values were filled randomly drawing from the global allele profiles by locus\nCompleted: :: \n Completed: dartR.base \n Completed: gl.impute \n\ngen &lt;- as.data.frame(data.gl.imputed)\npredictor &lt;- as.data.frame(data.gl.imputed@other$ind.metrics)\npsych::pairs.panels(predictor[,2:4], scale = T, cex.cor = 3) #to check correlation between pairs\n\n\n\n# For simplicity, we take the population as a proxy for environment (and sex a s a covariate), but ideally you have fine-scale environmental data for each individual. \nSNP_rda &lt;- vegan::rda(gen ~ pop + Condition(sex), \n                      data = predictor, scale = TRUE) \nsummary(SNP_rda)$cont$importance[,1:4]\n\n                             RDA1        RDA2        RDA3         RDA4\nEigenvalue            94.49748776 59.59813062 25.31846964 12.886197785\nProportion Explained   0.04317671  0.02723089  0.01156822  0.005887813\nCumulative Proportion  0.04317671  0.07040760  0.08197582  0.087863636\n\nsummary(vegan::eigenvals(SNP_rda, model = \"constrained\"))\n\nImportance of components:\n                         RDA1    RDA2    RDA3     RDA4\nEigenvalue            94.4975 59.5981 25.3185 12.88620\nProportion Explained   0.4914  0.3099  0.1317  0.06701\nCumulative Proportion  0.4914  0.8013  0.9330  1.00000\n\n# We have as many constrained (\"RDA\") axes as we have predictors \n# Residual variance is then modelled by PCA (the unconstrained \"PC\" axes)\n# Variance explained by the environmental predictors is under \"Proportion\"\n# and \"Constrained\" = equivalent to R2 in multiple regression,\n# so it is biased & should be adjusted based on the # of predictors:\n\nvegan::RsquareAdj(SNP_rda)\n\n$r.squared\n[1] 0.08693503\n\n$adj.r.squared\n[1] 0.07931155\n\n# Our constrained ordination explains about 6% of the variation\n# Not surprising given our large # of SNPs and other processes at work \n\nSNP.aov &lt;- anova(SNP_rda, test = \"Chi\", permutations = 100, parallel = 4) #run Anova on the result to see the significance level\nprint(SNP.aov)\n\nPermutation test for rda under reduced model\nPermutation: free\nNumber of permutations: 100\n\nModel: rda(formula = gen ~ pop + Condition(sex), data = predictor, scale = TRUE)\n          Df Variance      F   Pr(&gt;F)   \nModel      4    192.3 10.909 0.009901 **\nResidual 453   1996.3                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# Finally let's check Variance Inflation Factors for our predictors (they should be ok)\nvegan::vif.cca(SNP_rda)\n\n               sexM                sexU       popDaly River       popKing Sound \n           1.044034            2.272482            1.816568            1.612040 \npopPapua New Guinea  popVan Diemen Gulf \n           2.400668            2.415785 \n\n# All are below 10 and most are below 5 = multicollinearity shouldn't be a problem\n\nscreeplot(SNP_rda, npcs = 20, ptype = \"lines\", bstick = F)\n\n\n\npop &lt;- predictor$pop\ncol &lt;- c(\"#ff7f00\",\"#1f78b4\",\"#ffff33\",\"#a6cee3\",\"#33a02c\",\"#e31a1c\")\nplot(SNP_rda, choices = c(1, 2), type = \"n\", scaling = 3)\npoints(SNP_rda, display = \"species\", pch = 20, cex = 0.7, col = \"gray32\", scaling = 3)           # the SNPs\npoints(SNP_rda, display = \"sites\", pch = 21, cex = 1.3, col = \"gray32\", scaling = 3, bg = col[pop]) # the individuals\ntext(SNP_rda, scaling = 3, display = \"bp\", col = \"#0868ac\", cex = 1)                           # the predictors\nlegend(\"bottomright\", legend = levels(pop), bty = \"n\", col = \"gray32\", pch = 21, cex = 1, pt.bg = col)\n\n\n\n# Identify candidates\n# -------------------\nload.rda &lt;- vegan::scores(SNP_rda, choices = c(1:2), display = \"species\")  # Species scores for the first three constrained axes\nhist(load.rda[,1], main = \"Loadings on RDA1\")\n\n\n\nhist(load.rda[,2], main = \"Loadings on RDA2\")\n\n\n\n# This simple function identifies the SNPs that load in the tails of these distributions. \n# Outliers are defines as 3 standard deviation cut-off (two-tailed p-value = 0.0027).\noutliers &lt;- function(x,z){\n  lims &lt;- mean(x) + c(-1, 1) * z * sd(x)     # find loadings +/-z sd from mean loading\n  x[x &lt; lims[1] | x &gt; lims[2]]               # locus names in these tails\n}\n\ncand1 &lt;- outliers(load.rda[,1],3)\ncand2 &lt;- outliers(load.rda[,2],3)\nprint(length(cand1) + length(cand2))\n\n[1] 30"
  },
  {
    "objectID": "main_code.html#convert-data",
    "href": "main_code.html#convert-data",
    "title": "Let’s get started",
    "section": "Convert data",
    "text": "Convert data\nThere are many good software available to estimate relatedness, such as COLONY2, sequoia, gcta64, EMIBD9, PC-Relate, etc. For this example, we use the related package (Pew et al. 2015).\n\nrelate &lt;- dartR.base::gl2related(data.gl, verbose = 0)\npop.code &lt;- substr(data.gl$pop, start = 1, stop = 2) #Related only takes 2 letter code for population\nrelate$V1 &lt;- paste0(pop.code, \"_\", relate$V1)"
  },
  {
    "objectID": "main_code.html#run-coancestry-on-full-data",
    "href": "main_code.html#run-coancestry-on-full-data",
    "title": "Let’s get started",
    "section": "Run coancestry on full data",
    "text": "Run coancestry on full data\n\npw.rel &lt;- related::coancestry(relate, lynchli = 1, lynchrd = 1,trioml = 0L, dyadml = 0L,\n                               quellergt = 1, wang = 1, ritland = 1)\n\nsave(pw.rel, file = \"data/relatedness.Rdata\")\n\n\nprint(load(\"data/relatedness.Rdata\"))\n\n[1] \"pw.rel\"\n\nres &lt;- pw.rel$relatedness\n\nplot.data &lt;- tidyr::gather(res, condition, measurement, 5:11, factor_key = TRUE)\nsumm &lt;- dplyr::group_by(res, group) %&gt;%\n    dplyr::summarise(mean(ritland))\n\nkableExtra::kbl(summ) %&gt;%\n  kableExtra::kable_styling(full_width = FALSE, font_size = 11)\n\n\n\n\ngroup\nmean(ritland)\n\n\n\n\nCaCa\n0.2748690\n\n\nCaDa\n0.0889671\n\n\nCaKi\n0.0637159\n\n\nCaPa\n0.1612474\n\n\nCaVa\n-0.0362530\n\n\nDaCa\n0.0885335\n\n\nDaDa\n0.1585196\n\n\nDaKi\n0.0128862\n\n\nDaPa\n0.0302889\n\n\nDaVa\n-0.0202242\n\n\nKiCa\n0.0695242\n\n\nKiDa\n0.0177524\n\n\nKiKi\n0.6588158\n\n\nKiPa\n0.0913111\n\n\nKiVa\n-0.0420271\n\n\nPaCa\n0.1595705\n\n\nPaDa\n0.0475053\n\n\nPaKi\n0.0897825\n\n\nPaPa\n1.0283667\n\n\nPaVa\n-0.0383714\n\n\nVaCa\n-0.0364779\n\n\nVaDa\n-0.0247332\n\n\nVaKi\n-0.0431017\n\n\nVaPa\n-0.0309888\n\n\nVaVa\n0.0044785\n\n\n\n\n\n\nplot &lt;- ggplot2::ggplot(plot.data[plot.data$condition == \"wang\",], \n                        ggplot2::aes(x = group, y = measurement, \n                                                fill = group)) + \n  ggplot2::geom_boxplot() +\n  ggplot2::facet_wrap(condition~.) +\n  ggplot2::labs(x = \"Site\", y = \"Relatedness\") +\n  ggplot2::theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))\nprint(plot)\n\n\n\nhist.plot &lt;- ggplot2::ggplot(plot.data[plot.data$measurement &gt; 0.1 & \n                        plot.data$group == \"VaVa\" & \n                        plot.data$condition == \"wang\",],\n                        ggplot2::aes(x = measurement)) +\n  ggplot2::geom_histogram(colour = \"black\", fill = \"lightgray\", bins =  100) +\n  ggplot2::labs(x = \"Wang - relatedness\",\n                y = \"Frequency\")\nprint(hist.plot)\n\n\n\n\n\n\n\n\n\n\nExercise\n\n\n\nWhy do you have negative relatedness?\nWhy do some populations have very high relatedness?"
  },
  {
    "objectID": "main_code.html#one-population",
    "href": "main_code.html#one-population",
    "title": "Let’s get started",
    "section": "One population",
    "text": "One population\nIn reality, relatedness should only be estimated with a single population.\n\npopname &lt;- \"Van Diemen Gulf\"\n\nrelate.1pop &lt;- dartR.base::gl2related(data.gl[data.gl$pop == popname,], verbose = 0)\npop.code &lt;- \"Va\" #Related only takes 2 letter code for population\nrelate.1pop$V1 &lt;- paste0(pop.code, \"_\", relate.1pop$V1)\n\n\npw.rel.1pop &lt;- related::coancestry(relate.1pop, lynchli = 1, lynchrd = 1,trioml = 0L, dyadml = 0L,\n                               quellergt = 1, wang = 1, ritland = 1)\n\nsave(pw.rel.1pop, file = \"data/relatedness_1pop.Rdata\")\n\n\nprint(load(\"data/relatedness_1pop.Rdata\"))\n\n[1] \"pw.rel.1pop\"\n\nres.1pop &lt;- pw.rel.1pop$relatedness\nplot.data.1pop &lt;- tidyr::gather(res.1pop, condition, measurement, 5:11, factor_key = TRUE)\n\nhist.plot &lt;- ggplot2::ggplot(plot.data.1pop[plot.data.1pop$measurement &gt; 0 & \n                        plot.data.1pop$condition == \"wang\",],\n                        ggplot2::aes(x = measurement)) +\n  ggplot2::geom_histogram(colour = \"black\", fill = \"lightgray\", bins =  100) +\n  ggplot2::labs(x = \"Wang - relatedness\",\n                y = \"Frequency\")\nprint(hist.plot)\n\n\n\nhigh.rel &lt;- plot.data.1pop[plot.data.1pop$measurement &gt; 0.2 & \n                        plot.data.1pop$condition == \"wang\",]\n\nhist.plot &lt;- ggplot2::ggplot(high.rel, ggplot2::aes(x = measurement)) +\n  ggplot2::geom_histogram(colour = \"black\", fill = \"lightgray\", bins =  10) +\n  ggplot2::labs(x = \"Wang - relatedness\",\n                y = \"Frequency\")\nprint(hist.plot)\n\n\n\nkableExtra::kbl(high.rel[1:20, c(2:6)], \n  longtable = TRUE, booktabs = TRUE) %&gt;%\n  kableExtra::kable_styling(full_width = FALSE,font_size = 9, \n                            latex_options = c(\"repeat_header\", \"hold_position\"))\n\n\n\n\n\nind1.id\nind2.id\ngroup\ncondition\nmeasurement\n\n\n\n\n71634\nVa_GGA353\nVa_GGA345\nVaVa\nwang\n0.4183\n\n\n71836\nVa_GGA353\nVa_GGA364\nVaVa\nwang\n0.2373\n\n\n71838\nVa_GGA353\nVa_GGA366\nVaVa\nwang\n0.2816\n\n\n71991\nVa_GGA353\nVa_GGA358\nVaVa\nwang\n0.2977\n\n\n71993\nVa_GGA353\nVa_GGA360\nVaVa\nwang\n0.2242\n\n\n72681\nVa_GGL002\nVa_GGL033\nVaVa\nwang\n0.3874\n\n\n72964\nVa_GGA345\nVa_GGA364\nVaVa\nwang\n0.3010\n\n\n72965\nVa_GGA345\nVa_GGA365\nVaVa\nwang\n0.2231\n\n\n72966\nVa_GGA345\nVa_GGA366\nVaVa\nwang\n0.3212\n\n\n73108\nVa_GGA345\nVa_GGA355\nVaVa\nwang\n0.2462\n\n\n73119\nVa_GGA345\nVa_GGA358\nVaVa\nwang\n0.3050\n\n\n73575\nVa_GGA347\nVa_GGA088\nVaVa\nwang\n0.5037\n\n\n74902\nVa_GGA350\nVa_GGA369\nVaVa\nwang\n0.2847\n\n\n75350\nVa_GGA351\nVa_GGA360\nVaVa\nwang\n0.2675\n\n\n76090\nVa_GGL003\nVa_GGL013\nVaVa\nwang\n0.2712\n\n\n76093\nVa_GGL003\nVa_GGL016\nVaVa\nwang\n0.2240\n\n\n76716\nVa_GGS004\nVa_GGA206\nVaVa\nwang\n0.2392\n\n\n76725\nVa_GGS004\nVa_GGA342\nVaVa\nwang\n0.2146\n\n\n76829\nVa_GGS004\nVa_GGS012\nVaVa\nwang\n0.5121\n\n\n78226\nVa_GGL006\nVa_GGA111\nVaVa\nwang\n0.2975"
  },
  {
    "objectID": "main_code.html#load-data",
    "href": "main_code.html#load-data",
    "title": "Let’s get started",
    "section": "Load data",
    "text": "Load data\n\nBull Shark\n\nprint(load(\"data/Bull_shark_DArTseq_genlight_for_Sex-linked_markers.Rdata\"))\n\n[1] \"data.gl\"\n\n\n\n\nBlue Shark\n\nprint(load(\"data/Blue_shark_DArTseq_genlight_for_sex-linked_markers.Rdata\"))\n\n[1] \"data.gl\"\n\n\n\n\nRun gl.filter.sexlinked\n\n\n\nMarkers on X and Y chromosomes\n\n\n\nres &lt;- dartR.sexlinked::gl.filter.sexlinked(gl = data.gl, system = \"xy\", plots = TRUE, ncores = 1)\n\nDetected 104 females and 111 males.\n\n\nStarting phase 1. May take a while...\n\n\nBuilding call rate plots.\n\n\n\n\n\nDone. Starting phase 2.\n\n\nBuilding heterozygosity plots.\n\n\n\n\n\n\n\n\nDone building heterozygosity plots.\n\n\n**FINISHED** Total of analyzed loci: 172384.\nFound 26 sex-linked loci:\n   2 Y-linked loci\n   2 sex-biased loci\n   22 X-linked loci\n   0 XY gametologs.\nAnd 172358 autosomal loci.\n\n\n\n\n\n\n\nRun gl.infer.sex\n\nsexID &lt;- dartR.sexlinked::gl.infer.sex(gl_sex_filtered = res, system = \"xy\", seed = 124)\n\nNot enough gametologs (need at least 5). Assigning NA...\n\n\n***FINISHED***\n\nknitr::kable(head(sexID))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\ny.linked.sex\n#called\n#missing\nx.linked.sex\n#Het.x\n#Hom.x\ngametolog.sex\n#Het.g\n#Hom.g\nagreed.sex\n\n\n\n\n60088\n60088\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60160\n60160\nM\n2\n0\nM\n0\n21\nNA\nNA\nNA\nM\n\n\n60168\n60168\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60176\n60176\nM\n2\n0\nM\n0\n21\nNA\nNA\nNA\nM\n\n\n60096\n60096\nM\n2\n0\nM\n0\n22\nNA\nNA\nNA\nM\n\n\n60104\n60104\nM\n2\n0\nM\n1\n19\nNA\nNA\nNA\nM"
  }
]